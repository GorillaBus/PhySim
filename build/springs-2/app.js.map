{"version":3,"sources":["node_modules/browser-pack/_prelude.js","projects/springs-2/app.js","src/feature-toggle.js","src/lib/AnimationPlayer.js","src/lib/Particle.js","src/lib/Utils.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Particle from '../../src/lib/Particle';\nimport AnimationPlayer from '../../src/lib/AnimationPlayer';\nimport Utils from '../../src/lib/Utils';\n\nwindow.onload = () => {\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const width = canvas.width = window.innerWidth-4;\n    const height = canvas.height = window.innerHeight-4;\n\n    let player = new AnimationPlayer();\n\n    let springPoint = {\n        x: width / 2,\n        y: height / 2,\n        radius: 5\n    };\n\n    let k = 1.2;\n    let sepparation = 3;\n    let radius = 3;\n    let grav = 3;\n    let friction = 0.3;\n    let numWeights = 50;\n    let weights = chainWeights(springPoint, numWeights, k, sepparation, radius, grav, friction);\n\n    // Demo player\n    player.setUpdateFn(update);\n    player.play();\n\n    // Frame drawing function\n    function update() {\n        ctx.clearRect(0,0, width, height);\n\n        ctx.beginPath();\n        ctx.arc(springPoint.x, springPoint.y, springPoint.radius, 0, Math.PI * 2, false);\n        ctx.fillStyle = 'green';\n        ctx.fill();\n        ctx.closePath();\n\n        for(let i=0;i<numWeights;i++) {\n            let w = weights[i];\n            w.update();\n            checkEdges(w);\n\n            ctx.beginPath();\n            ctx.arc(w.x, w.y, w.radius, 0, Math.PI * 2, false);\n            ctx.fillStyle = '#000000';\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n\n    /* Helpers */\n\n    function checkEdges(p) {\n        if(p.y + p.radius > height) {\n            p.y = height - p.radius;\n            p.vy = p.vy * -0.95;\n        }\n    }\n\n    function chainWeights(springPoint, n, k, sepparation, radius, grav, friction) {\n        n = n || 1;\n        let arWeights = [];\n        for (let i=0;i<n;i++) {\n            let w = new Particle({\n                x: springPoint.x + (sepparation * (i+1)),\n                y: springPoint.y + (sepparation * (i+1)),\n                radius: radius,\n                gravity: grav,\n                friction: friction\n            });\n\n            if (arWeights.length === 0) {\n                w.addSpring(springPoint, k, sepparation);\n            } else {\n                w.addSpring(arWeights[i-1], k, sepparation);\n            }\n\n            arWeights.push(w);\n        }\n        return arWeights;\n    }\n\n\n    /* Events */\n\n    // Move last particle with the pointer\n    document.body.addEventListener(\"mousemove\", (e) => {\n        springPoint.x = e.clientX;\n        springPoint.y = e.clientY;\n    });\n\n    // Animation control: KeyDown\n    document.body.addEventListener(\"keydown\", (e) => {\n        //console.log(\"Key pressed: \", e.keyCode);\n        switch (e.keyCode) {\n            case 27:                        // Esc\n                if (player.playing) {\n                    player.stop();\n                    console.log(\"> Scene stopped\");\n                } else {\n                    player.play();\n                    console.log(\"> Playing scene\");\n                }\n                break;\n            default:\n                break;\n        }\n    });\n};\n","/*\n *  Feature Toggling\n *\n *  Activete/Hide features that are in process of development or under testing\n *  Once a feature is accepted to be includded must be removed from the\n *  feature toggle scheme\n */\n\n const FEATURE_TOGGLE = {\n   FPS_CONTROL: true                // FPS controll for AnimationPlayer class\n };\n\n export default FEATURE_TOGGLE;\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class AnimationPlayer {\n\n  constructor(settings) {\n    settings = settings || {};\n\n    this.window = settings.windowElement || window;\n    this.requestId = null;\n    this.playing = false;\n\n    // FPS control\n    this.fps = settings.fps || 90;\n    this.now;\n    this.lastTime = Date.now();\n    this.interval = 1000/this.fps;\n    this.delta;\n\n    this.registerEvents();\n  }\n\n  registerEvents() {\n    // Animation control: KeyDown\n    document.body.addEventListener(\"keydown\", (e) => {\n      //console.log(\"Key pressed: \", e.keyCode);\n      switch (e.keyCode) {\n        case 27:                        // Esc\n        if (this.playing) {\n          this.stop();\n          console.log(\"> Scene stopped\");\n        } else {\n          this.play();\n          console.log(\"> Playing scene\");\n        }\n        break;\n\n        case 13:\n        this.stop();\n        this.play();\n        this.stop();\n        console.log(\"> Step forward\");\n        break;\n\n        default:\n        break;\n      }\n    });\n  }\n\n  play() {\n    this.playing = true;\n    this.updateFn();\n  }\n\n  stop() {\n    if (!this.playing) {\n      return false;\n    }\n    this.window.cancelAnimationFrame(this.requestId);\n    this.playing = false;\n    this.requestId = null;\n  }\n\n  setUpdateFn(updateFn) {\n    this.updateFn = (\n      () => {\n        this.requestId = this.window.requestAnimationFrame(this.updateFn);\n        this.now = Date.now();\n        this.delta = this.now - this.lastTime;\n\n        if (this.delta > this.interval) {\n          this.lastTime = this.now - (this.delta % this.interval);\n          updateFn(this.delta, this.lastTime);\n        }\n        return;\n\n\n        updateFn();\n\n      });\n    }\n\n    updateFn() {\n      console.warn(\"Player update function has not been set.\");\n    }\n  }\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class Particle {\n\n  /*\n   *   Pass 'boxBounce' as { w: <with>, h: <height> } to make particle bounce inside a box\n   *\n   **/\n    constructor(settings) {\n        this.x = settings.x || 0;\n        this.y = settings.y || 0;\n        this.vx = (Math.cos(settings.direction) * settings.speed) || 0;\n        this.vy = (Math.sin(settings.direction) * settings.speed) || 0;\n        this.gravity = settings.gravity || 0;\n        this.mass = settings.mass || 1;\n        this.radius = settings.radius || settings.mass * 0.87;\n        this.friction = settings.friction || 1;\n        this.springs = [];\n        this.gravitations = [];\n        this.positionUpdated = false;\n        this.color = settings.color || 'rgba(0,0,0,0.6)';\n        this.boxBounce = settings.boxBounce || false;\n    }\n\n    /*\n     *  Updates the state of the particle\n     */\n    update() {\n        let x = this.x;\n        let y = this.y;\n\n        this.handleSprings();\n        this.handleGravitations();\n        this.vy += this.gravity;\n        this.vx *= this.friction;\n        this.vy *= this.friction;\n        this.x += this.vx;\n        this.y += this.vy;\n\n        if (this.boxBounce) {\n          this.checkBorders(this.boxBounce.w, this.boxBounce.h);\n        }\n\n        if (x !== this.x && y !== this.y) {\n          this.positionUpdated = true;\n        } else {\n\n        }\n    }\n\n    /*\n     *  Gets the length of the velocity vector, which equals to the hypotenuse\n     */\n    getSpeed() {\n        return Math.sqrt(this.vx * this.vx + this.vy * this.vy);\n    }\n\n    /*\n     *  Using the actual Velocity vector's angle, sets a new length for it\n     */\n    setSpeed(speed) {\n        let heading = this.getHeading();\n        this.vx = Math.cos(heading) * speed;\n        this.vy = Math.sin(heading) * speed;\n    }\n\n    /*\n     *  Gets the angle direction of the velocity vector\n     */\n    getHeading() {\n        return Math.atan2(this.vy, this.vx);\n    }\n\n    /*\n     *  Changes the Velocity vector's angle and recalculate coordinates\n     */\n    setHeading(heading) {\n        let speed = this.getSpeed();\n        this.vx = Math.cos(heading) * speed;\n        this.vy = Math.sin(heading) * speed;\n    }\n\n    /*\n     *  Sums to the Velocity vector x and y values\n     */\n    accelerate(x, y) {\n        this.vx += x;\n        this.vy += y;\n    }\n\n    /*\n    *  Bounce if the particle hits the box (i.e. screen) borders\n    */\n    checkBorders(width, height) {\n      if (this.x + this.radius >= width) {\n        this.x = width - this.radius;\n        this.vx *=  -1;\n      } else if (this.x - this.radius <= 0) {\n        this.x = this.radius;\n        this.vx *= -1;\n      }\n\n      if (this.y + this.radius >= height) {\n        this.y = height - this.radius;\n        this.vy *=  -1;\n      } else if (this.y - this.radius <= 0) {\n        this.y = this.radius;\n        this.vy *= -1;\n      }\n    }\n\n    /*\n     *  Calculates the angle between this particle and 'p2'\n     */\n    angleTo(p2) {\n        return Math.atan2(p2.y - this.y, p2.x - this.x);\n    }\n\n    /*\n     *  Calculates the distance to a given particle\n     */\n    distanceTo(p) {\n        let dx = p.x - this.x;\n        let dy = p.y - this.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /*\n     *  Calculates and applies a gravitation vector to a given particle\n     */\n     gravitateTo(p, gravityFactor) {\n         gravityFactor = gravityFactor || 0.04;\n\n         let radiusSum = this.radius + p.radius;\n         let massFactor = this.mass * p.mass;\n\n         let dx = p.x - this.x;\n         let dy = p.y - this.y;\n         let distSQ = (dx * dx) + (dy * dy);\n         let dist = Math.sqrt(distSQ);\n         let surfaceDist = dist - radiusSum;\n\n         // Cancel gravitation once objects collide\n         // TODO: Verify if we can save the Math.sqrt() comparing squares\n         if (dist < radiusSum + 5) {\n           return;\n         }\n\n         //let force = (p.mass) / distSQ; // Force = mass / square of the distance\n         let force = gravityFactor * massFactor / (surfaceDist * surfaceDist);\n\n         let ax = (dx / surfaceDist) * force;\n         let ay = (dy / surfaceDist) * force;\n\n         this.vx += ax;\n         this.vy += ay;\n     }\n\n    /*\n     *  Registers a particle to gravitate to\n     */\n    addGravitation(p) {\n        this.removeGravitation(p);\n        this.gravitations.push(p);\n    }\n\n    /*\n     *  Unregisters a gravitation particle\n     */\n    removeGravitation(p) {\n        let length = this.gravitations.length;\n        for (let i=0; i<length; i++){\n            if (this.gravitations[i] === p) {\n                this.gravitations.slice(i, 1);\n                return true;\n            }\n        }\n    }\n\n    /*\n     *  Gravitates to each registered gravitation particle\n     */\n    handleGravitations() {\n        let length = this.gravitations.length;\n        for (let i=0; i<length; i++){\n            this.gravitateTo(this.gravitations[i]);\n        }\n    }\n\n    /*\n     *  Calculates and applies a spring vector to a given point\n     */\n    springTo(point, k, length) {\n        let dx = point.x - this.x;\n        let dy = point.y - this.y;\n        let distance = Math.sqrt(dx * dx + dy * dy);\n        let force = (distance - length || 0) * k;\n        // Instead of getting cos / sin of angle, divide sides by hypotenuse\n        this.vx += (dx / distance) * force;\n        this.vy += (dy / distance) * force;\n    }\n\n    /*\n     *  Registers a new spring point\n     */\n    addSpring(point, k, length) {\n        this.removeSpring(point);\n        this.springs.push({\n            point: point,\n            k: k,\n            length: length || 0\n        });\n    }\n\n    /*\n     *  Unregisters a spring point\n     */\n    removeSpring(point) {\n        let length = this.springs.length;\n        for (let i=0; i<length; i++){\n            if (this.springs[i].point === point) {\n                this.springs.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n\n    /*\n     *  Springs to each registered spring point\n     */\n    handleSprings() {\n        let length = this.springs.length;\n        for (let i=0; i<length; i++){\n            let spring = this.springs[i];\n            this.springTo(spring.point, spring.k, spring.length);\n        }\n    }\n}\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nclass Utils {\n\n  constructor() {\n    this.cache = {};\n  }\n\n  cacheStore(caller, key, value) {\n    if (!this.cache.hasOwnProperty(caller)) {\n      this.cache[caller] = {};\n    }\n    this.cache[caller][key] = value;\n  }\n\n  cacheRetrieve(caller, key) {\n    let fnCache = this.cache[caller] || [];\n    let value = fnCache[key] || false;\n    return value;\n  }\n\n  /*\n   *  Get 'n' points from a circular shaped 'Particle' object\n   */\n  getCirclePoints(p, n, radius) {\n    n = n || 8;\n    radius = radius || p.radius || 0;\n\n    let angle = -1;\n    let angleStep = (Math.PI * 2) / n;\n    let points = [];\n\n    for (let i=0; i<n; i++) {\n      let cData = this.cacheRetrieve(\"getCirclePoints\", angle);\n      let cos = cData.cos || Math.cos(angle);\n      let sin = cData.sin || Math.sin(angle);\n      let pt = {\n        x: p.x + (cos * p.radius),\n        y: p.y + (sin * p.radius)\n      };\n      points.push(pt);\n      if (!cData) {\n        this.cacheStore(\"getCirclePoints\", angle, {cos: cos, sin: sin});\n      }\n      angle += angleStep;\n    }\n\n    // Add the center point\n    return points;\n  }\n\n  montecarlo() {\n    while(true) {\n      let r1 = Math.random();\n      let p = r1;\n      let r2 = Math.random();\n      if (r2 < p) {\n        return r1;\n      }\n    }\n  }\n\n  lerp(norm, min, max) {\n    return (max - min) * norm + min;\n  }\n\n  quadraticBezier(p0, p1, p2, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 2) * p0.x + (1 - t) * 2 * t * p1.x + t * t * p2.x;\n    pFinal.y = Math.pow(1 - t, 2) * p0.y + (1 - t) * 2 * t * p1.y + t * t * p2.y;\n    return pFinal;\n  }\n\n  cubicBezier(p0, p1, p2, p3, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 3) * p0.x + Math.pow(1 - t, 2) * 3 * t * p1.x + (1 - t) * 3 * t * t * p2.x + t * t * t * p3.x;\n    pFinal.y = Math.pow(1 - t, 3) * p0.y + Math.pow(1 - t, 2) * 3 * t * p1.y + (1 - t) * 3 * t * t * p2.y + t * t * t * p3.y;\n    return pFinal;\n  }\n\n  distance(p0, p1) {\n    let dx = p0.x - p1.x;\n    let dy = p0.y - p1.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  distanceXY(x0, y0, x1, y1) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  // TODO: Check if and why we need to parseInt() the result\n  mapRange(value, low1, high1, low2, high2) {\n    return result = low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n    let result = low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n    if (low2 === parseInt(low2, 10) || high2 === parseInt(high2, 10)) {\n      result = parseInt(result);\n    }\n    return result;\n  }\n\n  inRange(value, min, max) {\n    return value >= Math.min(min, max) && value <= Math.max(min, max);\n  }\n\n  rangeIntersect(min0, max0, min1, max1) {\n    return  Math.max(min0, max0) >= Math.min(min1, max1) &&\n    Math.min(min0, max0) <= Math.max(min1, max1);\n  }\n\n  randomRange(min, max) {\n    return min + Math.random() * (max - min);\n  }\n\n  constrain(e,t,r) {\n    return e>r?r:e<t?t:e;\n  }\n\n  circleCollision(c0, c1) {\n    return this.distance(c0, c1) <= c0.radius + c1.radius;\n  }\n\n  rectangleCollision(r0, r1) {\n    return  this.rangeIntersect(r0.x, r0.x + r0.width, r1.x, r1.x + r1.width) &&\n    this.rangeIntersect(r0.y, r0.y + r0.height, r1.y, r1.y + r1.height);\n  }\n\n  circlePointCollision(px, py, circle) {\n    return this.distanceXY(px, py, circle.x, circle.y) < circle.radius;\n  }\n\n  rectanglePointCollision(px, py, rect) {\n    return  this.inRange(px, rect.x, rect.x + rect.width) &&\n    this.inRange(py, rect.y, rect.y + rect.height);\n  }\n\n  uniqueID() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n      s4() + '-' + s4() + s4() + s4();\n  }\n\n  randomColor() {\n    return \"#000000\".replace(/0/g,function(){return (~~(Math.random()*16)).toString(16);});\n  }\n}\n\nlet instance = new Utils();\n\nexport default instance;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}