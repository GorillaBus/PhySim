{"version":3,"sources":["node_modules/browser-pack/_prelude.js","projects/attractive-thingies/app.js","projects/attractive-thingies/lib/Dust.js","src/feature-toggle.js","src/lib/AnimationPlayer.js","src/lib/Monitor.js","src/lib/Mover.js","src/lib/Utils.js","src/lib/Vector.js"],"names":[],"mappings":"AAAA;;;ACAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,OAAO,MAAP,GAAgB,YAAM;AAClB,MAAM,SAAS,SAAS,cAAT,CAAwB,QAAxB,CAAf;AACA,MAAM,MAAM,OAAO,UAAP,CAAkB,IAAlB,CAAZ;AACA,MAAM,QAAQ,OAAO,UAArB;AACA,MAAM,SAAS,OAAO,WAAP,GAAmB,CAAlC;AACA,MAAM,SAAS,EAAE,GAAG,QAAM,CAAX,EAAc,GAAG,SAAO,CAAxB,EAAf;AACA,WAAS,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyC,KAAzC,GAAiD,qBAAjD;AACA,SAAO,MAAP,GAAgB,MAAhB;AACA,SAAO,KAAP,GAAe,KAAf;;AAEA,MAAI,SAAS,+BAAb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAI,YAAY;AACd,OAAG,GADW;AAEd,OAAG,OAAO,CAFI;AAGd,YAAQ;AAHM,GAAhB;AAKA,MAAI,YAAY,EAAhB;AACA,MAAI,YAAY;AACd,OAAG,QAAQ,GADG;AAEd,OAAG,OAAO,CAAP,GAAS,EAFE;AAGd,YAAQ,CAAC;AAHK,GAAhB;AAKA,MAAI,YAAY,EAAhB;AACA,MAAI,KAAK,mBAAS,GAAT,EAAc,SAAd,EAAyB,SAAzB,CAAT;AACA,MAAI,KAAK,mBAAS,GAAT,EAAc,SAAd,EAAyB,SAAzB,CAAT;AACA,MAAI,OAAO,CAAC,EAAD,EAAK,EAAL,CAAX;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAO,WAAP,CAAmB,MAAnB;AACA,SAAO,IAAP;AACJ,MAAI,OAAO,KAAX;AACI;AACA,WAAS,MAAT,GAAkB;AACd,QAAI,SAAJ,CAAc,CAAd,EAAgB,CAAhB,EAAmB,KAAnB,EAA0B,MAA1B;;AAGA,SAAK,IAAI,IAAE,CAAX,EAAc,IAAE,KAAK,MAArB,EAA6B,GAA7B,EAAkC;AAC/B,WAAK,CAAL,EAAQ,MAAR;AACF;;AAED,SAAK,IAAI,KAAE,CAAX,EAAc,KAAE,KAAK,MAArB,EAA6B,IAA7B,EAAkC;AAChC,UAAI,KAAI,KAAK,EAAL,CAAR;AACA,UAAI,WAAW,KAAf;;AAEA;AACA,WAAK,IAAI,IAAE,CAAX,EAAc,IAAE,KAAK,MAArB,EAA6B,GAA7B,EAAkC;AAChC,YAAI,MAAK,KAAK,CAAL,CAAT;;AAEA,YAAI,GAAG,EAAH,KAAU,IAAG,EAAjB,EAAqB;AACnB;AACD;;AAED,YAAI,GAAG,QAAH,CAAY,GAAZ,KAAmB,CAAC,IAAxB,EAA8B;AAC5B,cAAI,SAAS,GAAG,cAAH,CAAkB,GAAlB,CAAb;AACA,iBAAO,IAAP;AACA,cAAI,MAAJ,EAAY;;AAEV,gBAAI,GAAG,IAAH,GAAU,IAAG,IAAjB,EAAuB;AACrB,iBAAG,MAAH,CAAU,GAAV;AACA,mBAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;AACD,aAHD,MAGO;AACL,kBAAG,MAAH,CAAU,EAAV;AACA,mBAAK,MAAL,CAAY,EAAZ,EAAe,CAAf;AACD;;AAED,uBAAW,IAAX;AACA;AACD;AACF;AAEF;;AAED;AACA;;AAEA;AACA,SAAG,IAAH;AACD;AACJ;;AAED;AACA,WAAS,IAAT,CAAc,gBAAd,CAA+B,SAA/B,EAA0C,UAAC,CAAD,EAAO;AAC7C;AACA,YAAQ,EAAE,OAAV;AACI,WAAK,EAAL;AAAgC;AAC5B,YAAI,OAAO,OAAX,EAAoB;AAChB,iBAAO,IAAP;AACA,kBAAQ,GAAR,CAAY,iBAAZ;AACH,SAHD,MAGO;AACH,iBAAO,IAAP;AACA,kBAAQ,GAAR,CAAY,iBAAZ;AACH;AACD;;AAEJ,WAAK,EAAL;AACA,eAAO,IAAP;AACA,eAAO,IAAP;AACA,eAAO,IAAP;AACA,gBAAQ,GAAR,CAAY,gBAAZ;AACA;;AAEA;AACI;AAnBR;AAqBH,GAvBD;AAyBH,CA7HD;;;;;;;;;;;ACPA;;;;AACA;;;;;;;;;;;;IAEqB,I;;;AAEnB,gBAAY,GAAZ,EAAiB,QAAjB,EAA2B,IAA3B,EAAiC,CAAjC,EAAoC;AAAA;;AAAA,4GAC5B,SAAS,CADmB,EAChB,SAAS,CADO,EACJ,IADI,EACE,IADF,EACQ,IADR,EACc,SAAS,MADvB;;AAGlC,UAAK,GAAL,GAAW,GAAX;AACA,UAAK,EAAL,GAAU,MAAK,IAAL,EAAV;AACA,UAAK,IAAL,GAAY,QAAQ,CAApB;AACA,UAAK,MAAL,GAAc,MAAK,UAAL,EAAd;AACA,UAAK,CAAL,GAAS,KAAK,GAAd;AACA,UAAK,SAAL,GAAiB,SAAjB;AARkC;AASnC;;;;iCAEY;AACX,aAAO,KAAK,IAAL,GAAY,CAAZ,GAAgB,KAAK,IAAL,GAAU,GAA1B,GAA8B,CAArC;AACD;;;6BAEQ,I,EAAM;AACb,UAAI,YAAY,KAAK,QAAL,CAAc,SAAd,CAAwB,KAAK,QAA7B,CAAhB;AACA,UAAI,WAAW,UAAU,SAAV,EAAf;;AAEA;AACA,UAAI,gBAAgB,KAAK,MAAL,GAAc,KAAK,MAAvC;AACA,UAAI,YAAY,aAAhB,EAA+B;AAC7B;AACA;AACA;AACA;;AAEA,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;;;2BAEM,I,EAAM;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAK,IAAL,IAAa,KAAK,IAAlB;AACA,WAAK,MAAL,GAAc,KAAK,UAAL,EAAd;;AAEA,UAAI,KAAK,SAAL,KAAmB,SAAvB,EAAkC;AAChC,aAAK,SAAL,GAAiB,MAAI,KAAK,KAAL,CAAW,KAAK,MAAL,KAAc,QAAzB,EAAmC,QAAnC,CAA4C,EAA5C,CAArB;AACD;AACF;;;4BAEO,I,EAAM;AACZ;AACA,UAAI,gBAAgB,KAAK,MAAL,GAAc,KAAK,MAAvC;AACA,UAAI,YAAY,KAAK,QAAL,CAAc,SAAd,CAAwB,KAAK,QAA7B,CAAhB;AACA,UAAI,eAAe,UAAU,SAAV,EAAnB;AACA,UAAI,gBAAgB,aAApB,EAAmC;;AAEjC,YAAI,UAAU,gBAAgB,YAA9B;AACA,kBAAU,SAAV;AACA,kBAAU,UAAV,CAAqB,OAArB;AACA,aAAK,QAAL,CAAc,aAAd,CAA4B,SAA5B;AACA,eAAO,KAAP;AACD;;AAED,UAAI,WAAW,KAAK,CAAL,GAAS,KAAK,IAAd,GAAqB,KAAK,IAAzC;AACA,UAAI,WAAW,KAAK,GAAL,CAAS,GAAT,EAAc,YAAd,CAAf;AACA,UAAI,QAAS,YAAY,WAAW,QAAvB,CAAb;;AAEA,gBAAU,SAAV;AACA,gBAAU,UAAV,CAAqB,KAArB;AACA,WAAK,UAAL,CAAgB,SAAhB;AACD;;;mCAGc,K,EAAO;AACpB;AACA,UAAI,iBAAiB,IAArB;;AAEA;;;;AAIC,UAAI,MAAM,KAAK,QAAL,CAAc,IAAd,EAAV;AACA,UAAI,MAAM,KAAK,QAAL,CAAc,IAAd,EAAV;AACA,UAAI,WAAY,KAAK,IAAL,GAAY,MAAM,IAAlC;AACA,UAAI,YAAa,KAAK,IAAL,GAAY,MAAM,IAAnC;;AAEA;AACA,WAAK,QAAL,CAAc,UAAd,CAAyB,CAAzB;AACA,UAAI,UAAJ,CAAe,QAAf;AACA,UAAI,QAAJ,CAAa,SAAb;AACA,UAAI,UAAJ,CAAe,cAAf;;AAIA;AACA,YAAM,QAAN,CAAe,UAAf,CAA0B,CAA1B;AACA,UAAI,UAAJ,CAAe,IAAI,KAAK,IAAxB;AACA,UAAI,QAAJ,CAAa,SAAb;AACA,UAAI,UAAJ,CAAe,cAAf;;AAEA,UAAI,SAAS,IAAI,SAAJ,KAAkB,IAAI,SAAJ,EAA/B;AACA,UAAI,SAAS,GAAb,EAAkB;AAChB,eAAO,MAAP;AACD;;AAED,WAAK,QAAL,GAAgB,GAAhB;AACA,YAAM,QAAN,GAAiB,GAAjB;;AAGA;;;;;;;;;;;;;;;;;;;;;;AA4BF;;;qCAEgB,K,EAAO;AACtB;;;;AAIC,UAAI,MAAM,KAAK,QAAL,CAAc,IAAd,EAAV;AACA,UAAI,MAAM,KAAK,QAAL,CAAc,IAAd,EAAV;AACA,UAAI,WAAY,KAAK,IAAL,GAAY,MAAM,IAAlC;AACA,UAAI,YAAa,KAAK,IAAL,GAAY,MAAM,IAAnC;;AAEA;AACA,WAAK,QAAL,CAAc,UAAd,CAAyB,CAAzB;AACA,UAAI,UAAJ,CAAe,QAAf;AACA,UAAI,QAAJ,CAAa,SAAb;AACA,WAAK,QAAL,GAAgB,GAAhB;;AAEA;AACA,YAAM,QAAN,CAAe,UAAf,CAA0B,CAA1B;AACA,UAAI,UAAJ,CAAe,IAAI,KAAK,IAAxB;AACA,UAAI,QAAJ,CAAa,SAAb;AACA,YAAM,QAAN,GAAiB,GAAjB;AACF;;;2BAGM;AACL,UAAI,IAAI,KAAK,QAAL,CAAc,IAAd,EAAR;AACA,UAAI,IAAI,KAAK,QAAL,CAAc,IAAd,EAAR;;AAEA,WAAK,GAAL,CAAS,SAAT;AACA,WAAK,GAAL,CAAS,GAAT,CAAa,CAAb,EAAgB,CAAhB,EAAmB,KAAK,MAAxB,EAAgC,CAAhC,EAAmC,KAAK,EAAL,GAAU,CAA7C,EAAgD,KAAhD;AACA,WAAK,GAAL,CAAS,SAAT,GAAqB,KAAK,SAA1B;AACA,WAAK,GAAL,CAAS,IAAT;AACD;;;2BAEM;AACL,eAAS,EAAT,GAAc;AACZ,eAAO,KAAK,KAAL,CAAW,CAAC,IAAI,KAAK,MAAL,EAAL,IAAsB,OAAjC,EACN,QADM,CACG,EADH,EAEN,SAFM,CAEI,CAFJ,CAAP;AAGD;AACD,aAAO,OAAO,IAAP,GAAc,GAAd,GAAoB,IAApB,GAA2B,GAA3B,GAAiC,IAAjC,GAAwC,GAAxC,GACL,IADK,GACE,GADF,GACQ,IADR,GACe,IADf,GACsB,IAD7B;AAED;;;;;;kBAxLkB,I;;;;;;;;ACHrB;;;;;;;;AAQC,IAAM,iBAAiB;AACrB,eAAa,KADQ,CACa;AADb,CAAvB;;kBAIe,c;;;;;;;;;;;ACZhB;;;;;;;;IAEqB,e;AAEjB,6BAAY,QAAZ,EAAsB;AAAA;;AAClB,mBAAW,YAAY,EAAvB;;AAEA,aAAK,MAAL,GAAc,SAAS,aAAT,IAA0B,MAAxC;AACA,aAAK,SAAL,GAAiB,IAAjB;AACA,aAAK,OAAL,GAAe,KAAf;;AAEA;AACA,YAAI,wBAAe,WAAnB,EAAgC;AAC9B,iBAAK,GAAL,GAAW,SAAS,GAAT,IAAgB,EAA3B;AACA,iBAAK,GAAL;AACA,iBAAK,QAAL,GAAgB,KAAK,GAAL,EAAhB;AACA,iBAAK,QAAL,GAAgB,OAAK,KAAK,GAA1B;AACA,iBAAK,KAAL;AACD;AAEJ;;;;+BAEM;AACH,iBAAK,OAAL,GAAe,IAAf;AACA,iBAAK,QAAL;AACH;;;+BAEM;AACH,gBAAI,CAAC,KAAK,OAAV,EAAmB;AACf,uBAAO,KAAP;AACH;AACD,iBAAK,MAAL,CAAY,oBAAZ,CAAiC,KAAK,SAAtC;AACA,iBAAK,OAAL,GAAe,KAAf;AACA,iBAAK,SAAL,GAAiB,IAAjB;AACH;;;oCAEW,Q,EAAU;AAAA;;AAClB,iBAAK,QAAL,GACI,YAAM;AACF,sBAAK,SAAL,GAAiB,MAAK,MAAL,CAAY,qBAAZ,CAAkC,MAAK,QAAvC,CAAjB;;AAEA;AACA,oBAAI,wBAAe,WAAnB,EAAgC;AAC9B,0BAAK,GAAL,GAAW,KAAK,GAAL,EAAX;AACA,0BAAK,KAAL,GAAa,MAAK,GAAL,GAAW,MAAK,QAA7B;;AAEA,wBAAI,MAAK,KAAL,GAAa,MAAK,QAAtB,EAAgC;AAC9B,8BAAK,QAAL,GAAgB,MAAK,GAAL,GAAY,MAAK,KAAL,GAAa,MAAK,QAA9C;AACA;AACD;AACD;AACD;;AAED;AAEH,aAlBL;AAmBH;;;mCAEU;AACP,oBAAQ,IAAR,CAAa,0CAAb;AACH;;;;;;kBA1DgB,e;;;;;;;;;;;;;ICFA,O;AAEnB,qBAAc;AAAA;;AACZ,SAAK,UAAL,GAAkB,KAAK,aAAL,EAAlB;AACA,SAAK,OAAL,GAAe,EAAf;AACD;;;;wBAEG,C,EAAG,C,EAAG;AACR,UAAI,IAAE,CAAN;AACA,UAAI,CAAC,KAAK,OAAL,CAAa,CAAb,CAAL,EAAsB;AACpB,gBAAQ,IAAR,CAAa,0BAA0B,CAAvC;AACA,eAAO,KAAP;AACD;AACD,WAAK,OAAL,CAAa,CAAb,EAAgB,SAAhB,GAA4B,CAA5B;AACD;;;8BAES,K,EAAO;AACf,UAAI,IAAI,KAAK,YAAL,CAAkB,KAAlB,CAAR;AACA,UAAI,IAAI,EAAE,oBAAF,CAAuB,MAAvB,EAA+B,CAA/B,CAAR;AACA,WAAK,OAAL,CAAa,IAAb,CAAkB,CAAlB;AACA,WAAK,UAAL,CAAgB,WAAhB,CAA4B,CAA5B;AACA,aAAO,KAAK,OAAL,CAAa,MAApB;AACD;;;oCAEe;AACd,UAAI,IAAI,SAAS,aAAT,CAAuB,KAAvB,CAAR;AACA,QAAE,YAAF,CAAe,IAAf,EAAqB,gBAArB;AACA,eAAS,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyC,WAAzC,CAAqD,CAArD;AACA,aAAO,CAAP;AACD;;;iCAEY,K,EAAO;AAClB,cAAQ,KAAK,QAAL,CAAc,KAAd,CAAR;;AAEA,UAAI,IAAI,SAAS,aAAT,CAAuB,KAAvB,CAAR;AACA,QAAE,YAAF,CAAe,OAAf,EAAwB,SAAxB;AACA,QAAE,YAAF,CAAe,IAAf,EAAqB,KAArB;;AAEA,UAAI,OAAO,SAAS,aAAT,CAAuB,IAAvB,CAAX;AACA,WAAK,SAAL,GAAiB,KAAjB;AACA,QAAE,WAAF,CAAc,IAAd;;AAEA,UAAI,MAAM,SAAS,aAAT,CAAuB,MAAvB,CAAV;AACA,UAAI,SAAJ,GAAgB,KAAhB;AACA,QAAE,WAAF,CAAc,GAAd;;AAEA,aAAO,CAAP;AACD;;;6BAEQ,C,EAAG;AACX,aAAO,EAAE,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAAP;AACA;;;;;;kBAnDkB,O;;;;;;;;;;;ACArB;;;;;;;;IAEqB,K;AAEnB,iBAAY,CAAZ,EAAe,CAAf,EAAkB,IAAlB,EAAwB,KAAxB,EAA+B,SAA/B,EAA0C,MAA1C,EAAkD;AAAA;;AAChD,aAAS,UAAU,CAAnB;AACA,SAAK,KAAL,GAAa,SAAS,CAAtB;AACA,SAAK,IAAL,GAAY,QAAQ,CAApB;AACA,SAAK,SAAL,GAAiB,aAAa,CAA9B;AACA,SAAK,YAAL,GAAoB,qBAAW,EAAE,GAAG,CAAL,EAAQ,GAAG,CAAX,EAAX,CAApB;AACA,SAAK,QAAL,GAAgB,qBAAW,EAAE,GAAG,CAAL,EAAQ,GAAG,CAAX,EAAc,QAAQ,MAAtB,EAAX,CAAhB;AACA,SAAK,QAAL,GAAgB,qBAAW,EAAE,GAAG,CAAL,EAAQ,GAAG,CAAX,EAAX,CAAhB;AACD;;;;+BAEU,K,EAAO;AAChB;AACA,UAAI,IAAI,MAAM,MAAN,CAAa,KAAK,IAAlB,CAAR;AACA,WAAK,YAAL,CAAkB,KAAlB,CAAwB,CAAxB;AACD;;;6BAEQ;AACP,UAAI,KAAK,SAAL,IAAkB,CAAlB,IAAuB,KAAK,QAAL,CAAc,SAAd,KAA4B,KAAK,SAA5D,EAAuE;AACrE,aAAK,QAAL,CAAc,SAAd,CAAwB,KAAK,SAA7B;AACD,OAFD,MAEO;AACL,aAAK,QAAL,CAAc,KAAd,CAAoB,KAAK,YAAzB;AACD;;AAED,WAAK,QAAL,CAAc,KAAd,CAAoB,KAAK,QAAzB;AACA;AACA,WAAK,YAAL,CAAkB,UAAlB,CAA6B,CAA7B;AACD;;;6BAEQ,M,EAAQ;AACf,aAAO,KAAK,QAAL,CAAc,IAAd,KAAuB,OAAO,IAAP,EAAvB,IAAwC,KAAK,QAAL,CAAc,IAAd,MAAwB,OAAO,IAAP,KAAgB,OAAO,IAAP,EAAvF;AACD;;;yBAEI,M,EAAQ;AACX,UAAI,QAAQ,KAAK,QAAL,CAAc,SAAd,EAAZ;AACA,UAAI,gBAAgB,OAAO,IAAP,KAAgB,KAAhB,GAAwB,KAA5C;AACA,UAAI,OAAO,KAAK,QAAL,CAAc,QAAd,CAAuB,CAAC,CAAxB,CAAX;;AAEA,WAAK,SAAL;AACA,WAAK,UAAL,CAAgB,aAAhB;AACA,WAAK,UAAL,CAAgB,IAAhB;AACD;;;+BAEU,K,EAAO,M,EAAQ;AACxB,UAAI,KAAK,QAAL,CAAc,IAAd,MAAwB,KAA5B,EAAmC;AACjC,aAAK,QAAL,CAAc,IAAd,CAAmB,KAAnB;AACA,aAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,QAAL,CAAc,IAAd,KAAwB,CAAC,CAA5C;AACD,OAHD,MAGO,IAAI,KAAK,QAAL,CAAc,IAAd,MAAwB,CAA5B,EAA+B;AACpC,aAAK,QAAL,CAAc,IAAd,CAAmB,CAAnB;AACA,aAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,QAAL,CAAc,IAAd,KAAwB,CAAC,CAA5C;AACD;;AAED,UAAI,KAAK,QAAL,CAAc,IAAd,MAAwB,MAA5B,EAAoC;AAClC,aAAK,QAAL,CAAc,IAAd,CAAmB,MAAnB;AACA,aAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,QAAL,CAAc,IAAd,KAAuB,CAAC,CAA3C;AACD,OAHD,MAGO,IAAI,KAAK,QAAL,CAAc,IAAd,MAAwB,CAA5B,EAA+B;AACpC,aAAK,QAAL,CAAc,IAAd,CAAmB,CAAnB;AACA,aAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,QAAL,CAAc,IAAd,KAAuB,CAAC,CAA3C;AACD;AACF;;;oCAEe;AACd,WAAK,QAAL,CAAc,UAAd,CAAyB,CAAzB;AACD;;;;;;kBAhEkB,K;;;;;;;;;;;ACFrB;;;;;;;;IAEM,K;;;;;;;iCAES;AACX,aAAM,IAAN,EAAY;AACV,YAAI,KAAK,KAAK,MAAL,EAAT;AACA,YAAI,IAAI,EAAR;AACA,YAAI,KAAK,KAAK,MAAL,EAAT;AACA,YAAI,KAAK,CAAT,EAAY;AACV,iBAAO,EAAP;AACD;AACF;AACF;;;yBAEI,I,EAAM,G,EAAK,G,EAAK;AACnB,aAAO,CAAC,MAAM,GAAP,IAAc,IAAd,GAAqB,GAA5B;AACD;;;oCAEe,E,EAAI,E,EAAI,E,EAAI,C,EAAG,M,EAAQ;AACrC,eAAS,UAAU,EAAnB;AACA,aAAO,CAAP,GAAW,KAAK,GAAL,CAAS,IAAI,CAAb,EAAgB,CAAhB,IAAqB,GAAG,CAAxB,GAA4B,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAAd,GAAkB,GAAG,CAAjD,GAAqD,IAAI,CAAJ,GAAQ,GAAG,CAA3E;AACA,aAAO,CAAP,GAAW,KAAK,GAAL,CAAS,IAAI,CAAb,EAAgB,CAAhB,IAAqB,GAAG,CAAxB,GAA4B,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAAd,GAAkB,GAAG,CAAjD,GAAqD,IAAI,CAAJ,GAAQ,GAAG,CAA3E;AACA,aAAO,MAAP;AACD;;;gCAEW,E,EAAI,E,EAAI,E,EAAI,E,EAAI,C,EAAG,M,EAAQ;AACrC,eAAS,UAAU,EAAnB;AACA,aAAO,CAAP,GAAW,KAAK,GAAL,CAAS,IAAI,CAAb,EAAgB,CAAhB,IAAqB,GAAG,CAAxB,GAA4B,KAAK,GAAL,CAAS,IAAI,CAAb,EAAgB,CAAhB,IAAqB,CAArB,GAAyB,CAAzB,GAA6B,GAAG,CAA5D,GAAgE,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAAd,GAAkB,CAAlB,GAAsB,GAAG,CAAzF,GAA6F,IAAI,CAAJ,GAAQ,CAAR,GAAY,GAAG,CAAvH;AACA,aAAO,CAAP,GAAW,KAAK,GAAL,CAAS,IAAI,CAAb,EAAgB,CAAhB,IAAqB,GAAG,CAAxB,GAA4B,KAAK,GAAL,CAAS,IAAI,CAAb,EAAgB,CAAhB,IAAqB,CAArB,GAAyB,CAAzB,GAA6B,GAAG,CAA5D,GAAgE,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAAd,GAAkB,CAAlB,GAAsB,GAAG,CAAzF,GAA6F,IAAI,CAAJ,GAAQ,CAAR,GAAY,GAAG,CAAvH;AACA,aAAO,MAAP;AACD;;;6BAEQ,E,EAAI,E,EAAI;AACf,UAAI,KAAK,GAAG,CAAH,GAAO,GAAG,CAAnB;AACA,UAAI,KAAK,GAAG,CAAH,GAAO,GAAG,CAAnB;AACA,aAAO,KAAK,IAAL,CAAU,KAAK,EAAL,GAAU,KAAK,EAAzB,CAAP;AACD;;;+BAEU,E,EAAI,E,EAAI,E,EAAI,E,EAAI;AACzB,UAAI,KAAK,KAAK,EAAd;AACA,UAAI,KAAK,KAAK,EAAd;AACA,aAAO,KAAK,IAAL,CAAU,KAAK,EAAL,GAAU,KAAK,EAAzB,CAAP;AACD;;AAED;;;;6BACS,K,EAAO,I,EAAM,K,EAAO,I,EAAM,K,EAAO;AACxC,aAAO,SAAS,OAAO,CAAC,QAAQ,IAAT,KAAkB,QAAQ,IAA1B,KAAmC,QAAQ,IAA3C,CAAvB;AACA,UAAI,SAAS,OAAO,CAAC,QAAQ,IAAT,KAAkB,QAAQ,IAA1B,KAAmC,QAAQ,IAA3C,CAApB;AACA,UAAI,SAAS,SAAS,IAAT,EAAe,EAAf,CAAT,IAA+B,UAAU,SAAS,KAAT,EAAgB,EAAhB,CAA7C,EAAkE;AAChE,iBAAS,SAAS,MAAT,CAAT;AACD;AACD,aAAO,MAAP;AACD;;;4BAEO,K,EAAO,G,EAAK,G,EAAK;AACvB,aAAO,SAAS,KAAK,GAAL,CAAS,GAAT,EAAc,GAAd,CAAT,IAA+B,SAAS,KAAK,GAAL,CAAS,GAAT,EAAc,GAAd,CAA/C;AACD;;;mCAEc,I,EAAM,I,EAAM,I,EAAM,I,EAAM;AACrC,aAAQ,KAAK,GAAL,CAAS,IAAT,EAAe,IAAf,KAAwB,KAAK,GAAL,CAAS,IAAT,EAAe,IAAf,CAAxB,IACR,KAAK,GAAL,CAAS,IAAT,EAAe,IAAf,KAAwB,KAAK,GAAL,CAAS,IAAT,EAAe,IAAf,CADxB;AAED;;;gCAEW,G,EAAK,G,EAAK;AACpB,aAAO,MAAM,KAAK,MAAL,MAAiB,MAAM,GAAvB,CAAb;AACD;;;oCAEe,E,EAAI,E,EAAI;AACtB,aAAO,KAAK,QAAL,CAAc,EAAd,EAAkB,EAAlB,KAAyB,GAAG,MAAH,GAAY,GAAG,MAA/C;AACD;;;uCAEkB,E,EAAI,E,EAAI;AACzB,aAAQ,KAAK,cAAL,CAAoB,GAAG,CAAvB,EAA0B,GAAG,CAAH,GAAO,GAAG,KAApC,EAA2C,GAAG,CAA9C,EAAiD,GAAG,CAAH,GAAO,GAAG,KAA3D,KACR,KAAK,cAAL,CAAoB,GAAG,CAAvB,EAA0B,GAAG,CAAH,GAAO,GAAG,MAApC,EAA4C,GAAG,CAA/C,EAAkD,GAAG,CAAH,GAAO,GAAG,MAA5D,CADA;AAED;;;yCAEoB,E,EAAI,E,EAAI,M,EAAQ;AACnC,aAAO,KAAK,UAAL,CAAgB,EAAhB,EAAoB,EAApB,EAAwB,OAAO,CAA/B,EAAkC,OAAO,CAAzC,IAA8C,OAAO,MAA5D;AACD;;;4CAEuB,E,EAAI,E,EAAI,I,EAAM;AACpC,aAAQ,KAAK,OAAL,CAAa,EAAb,EAAiB,KAAK,CAAtB,EAAyB,KAAK,CAAL,GAAS,KAAK,KAAvC,KACR,KAAK,OAAL,CAAa,EAAb,EAAiB,KAAK,CAAtB,EAAyB,KAAK,CAAL,GAAS,KAAK,MAAvC,CADA;AAED;;;;;;AAGH,IAAI,WAAW,IAAI,KAAJ,EAAf;;kBAEe,Q;;;;;;;;;;;ACzFf;;;;;;;;IAEqB,M;AAEnB,kBAAY,QAAZ,EAAsB;AAAA;;AACpB,eAAW,YAAY,EAAvB;AACA,aAAS,CAAT,GAAa,SAAS,CAAT,IAAc,CAA3B;AACA,aAAS,CAAT,GAAa,SAAS,CAAT,IAAc,CAA3B;AACA,aAAS,MAAT,GAAkB,SAAS,MAAT,IAAmB,CAArC;AACA,aAAS,KAAT,GAAiB,SAAS,KAAT,IAAkB,CAAnC;;AAEA,SAAK,EAAL,GAAU,SAAS,CAAnB;AACA,SAAK,EAAL,GAAU,SAAS,CAAnB;;AAEA,QAAI,SAAS,MAAb,EAAqB;AACnB,WAAK,SAAL,CAAe,SAAS,MAAxB;AACD;AACD,QAAI,SAAS,KAAb,EAAoB;AAClB,WAAK,QAAL,CAAc,SAAS,KAAvB;AACD;AACF;;;;yBAEI,K,EAAO;AACV,WAAK,EAAL,GAAU,KAAV;AACD;;;yBAEI,K,EAAO;AACV,aAAO,KAAK,EAAZ;AACD;;;yBAEI,K,EAAO;AACV,WAAK,EAAL,GAAU,KAAV;AACD;;;yBAEI,K,EAAO;AACV,aAAO,KAAK,EAAZ;AACD;;;6BAEQ,K,EAAO;AACd,UAAI,SAAS,KAAK,SAAL,EAAb;AACA,WAAK,EAAL,GAAU,KAAK,GAAL,CAAS,KAAT,IAAkB,MAA5B;AACA,WAAK,EAAL,GAAU,KAAK,GAAL,CAAS,KAAT,IAAkB,MAA5B;AACD;;;+BAEU;AACT,aAAO,KAAK,KAAL,CAAW,KAAK,EAAhB,EAAoB,KAAK,EAAzB,CAAP;AACD;;;8BAES,M,EAAQ;AAChB,UAAI,QAAQ,KAAK,QAAL,EAAZ;AACA,WAAK,EAAL,GAAU,KAAK,GAAL,CAAS,KAAT,IAAkB,MAA5B;AACA,WAAK,EAAL,GAAU,KAAK,GAAL,CAAS,KAAT,IAAkB,MAA5B;AACD;;;gCAEW;AACV,aAAO,KAAK,IAAL,CAAU,KAAK,EAAL,GAAU,KAAK,EAAf,GAAoB,KAAK,EAAL,GAAU,KAAK,EAA7C,CAAP;AACD;;;wBAEG,M,EAAQ;AACV,aAAO,IAAI,MAAJ,CAAW,EAAE,GAAG,KAAK,EAAL,GAAU,OAAO,IAAP,EAAf,EAA8B,GAAG,KAAK,EAAL,GAAU,OAAO,IAAP,EAA3C,EAAX,CAAP;AACD;;;8BAES,M,EAAQ;AAChB,aAAO,IAAI,MAAJ,CAAW,EAAE,GAAG,KAAK,EAAL,GAAU,OAAO,IAAP,EAAf,EAA8B,GAAG,KAAK,EAAL,GAAU,OAAO,IAAP,EAA3C,EAAX,CAAP;AACD;;;6BAEQ,K,EAAO;AACd,aAAO,IAAI,MAAJ,CAAW,EAAE,GAAG,KAAK,EAAL,GAAU,KAAf,EAAsB,GAAG,KAAK,EAAL,GAAU,KAAnC,EAAX,CAAP;AACD;;;2BAEM,K,EAAO;AACZ,aAAO,IAAI,MAAJ,CAAW,EAAE,GAAG,KAAK,EAAL,GAAU,KAAf,EAAsB,GAAG,KAAK,EAAL,GAAU,KAAnC,EAAX,CAAP;AACD;;;0BAEK,M,EAAQ;AACZ,WAAK,EAAL,IAAW,OAAO,IAAP,EAAX;AACA,WAAK,EAAL,IAAW,OAAO,IAAP,EAAX;AACD;;;kCAEa,M,EAAQ;AACpB,WAAK,EAAL,IAAW,OAAO,IAAP,EAAX;AACA,WAAK,EAAL,IAAW,OAAO,IAAP,EAAX;AACD;;;+BAEU,K,EAAO;AAChB,WAAK,EAAL,IAAW,KAAX;AACA,WAAK,EAAL,IAAW,KAAX;AACD;;;6BAEQ,K,EAAO;AACd,WAAK,EAAL,IAAW,KAAX;AACA,WAAK,EAAL,IAAW,KAAX;AACD;;;2BAEM;AACL,aAAO,IAAI,MAAJ,CAAW;AAChB,WAAG,KAAK,IAAL,EADa;AAEhB,WAAG,KAAK,IAAL;AAFa,OAAX,CAAP;AAID;;;gCAEW;AACV,UAAI,SAAS,KAAK,SAAL,EAAb;AACA,UAAI,UAAU,CAAd,EAAiB;AACf,aAAK,QAAL,CAAc,MAAd;AACD;AACF;;;;;;kBAxGkB,M;AAyGpB","file":"app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import AnimationPlayer from '../../src/lib/AnimationPlayer';\nimport Monitor from '../../src/lib/Monitor';\nimport Vector from '../../src/lib/Vector';\nimport Utils from '../../src/lib/Utils.js';\n\nimport Dust from './lib/Dust.js';\n\nwindow.onload = () => {\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const width = window.innerWidth;\n    const height = window.innerHeight-4;\n    const center = { x: width/2, y: height/2 };\n    document.getElementsByTagName(\"BODY\")[0].style = \"background: #000000\";\n    canvas.height = height;\n    canvas.width = width;\n\n    let player = new AnimationPlayer();\n\n    // Create dust\n    // let dust = new Array(30);\n    // for (let i=0;i<dust.length;i++){\n    //   let position = {\n    //     x: Utils.randomRange(0, width),\n    //     y: Utils.randomRange(0, height)\n    //   };\n    //   let initMass = 1;\n    //\n    //   dust[i] = new Dust(ctx, position, initMass);\n    // }\n\n    // Create dust\n    let position1 = {\n      x: 100,\n      y: center.y,\n      length: 3\n    };\n    let initMass1 = 41;\n    let position2 = {\n      x: width - 100,\n      y: center.y-15,\n      length: -2\n    };\n    let initMass2 = 12;\n    let d1 = new Dust(ctx, position1, initMass1);\n    let d2 = new Dust(ctx, position2, initMass2);\n    let dust = [d1, d2];\n\n    // let direction = dust[1].location.substract(dust[0].location);\n    // direction.normalize();\n    // direction.multiplyBy(20);\n    // dust[0].applyForce(direction);\n\n    // Demo player setup\n    player.setUpdateFn(update);\n    player.play();\nlet flag = false;\n    // Frame drawing function\n    function update() {\n        ctx.clearRect(0,0, width, height);\n\n\n        for (let i=0; i<dust.length; i++) {\n           dust[i].update();\n        }\n\n        for (let i=0; i<dust.length; i++) {\n          let d1= dust[i];\n          let absorbed = false;\n\n          // Interaction\n          for (let x=0; x<dust.length; x++) {\n            let d2 = dust[x];\n\n            if (d1.id === d2.id) {\n              continue;\n            }\n\n            if (d1.collides(d2) && !flag) {\n              let recoil = d1.collideElastic(d2);\n              flag = true;\n              if (recoil) {\n\n                if (d1.mass > d2.mass) {\n                  d1.absorb(d2)\n                  dust.splice(x, 1);\n                } else {\n                  d2.absorb(d1);\n                  dust.splice(i, 1);\n                }\n\n                absorbed = true;\n                continue;\n              }\n            }\n\n          }\n\n          // Update\n          //d1.checkEdges(width, height);\n\n          // Draw\n          d1.draw();\n        }\n    }\n\n    // Animation control: KeyDown\n    document.body.addEventListener(\"keydown\", (e) => {\n        //console.log(\"Key pressed: \", e.keyCode);\n        switch (e.keyCode) {\n            case 27:                        // Esc\n                if (player.playing) {\n                    player.stop();\n                    console.log(\"> Scene stopped\");\n                } else {\n                    player.play();\n                    console.log(\"> Playing scene\");\n                }\n                break;\n\n            case 13:\n            player.stop();\n            player.play();\n            player.stop();\n            console.log(\"> Step forward\");\n            break;\n\n            default:\n                break;\n        }\n    });\n\n};\n","import Utils from '../../../src/lib/Utils.js';\nimport Mover from '../../../src/lib/Mover.js';\n\nexport default class Dust extends Mover {\n\n  constructor(ctx, position, mass, G) {\n    super(position.x, position.y, mass, null, null, position.length);\n\n    this.ctx = ctx;\n    this.id = this.uuid();\n    this.mass = mass || 1;\n    this.radius = this.calcRadius();\n    this.G = G || 0.9;\n    this.fillStyle = \"#ffffff\";\n  }\n\n  calcRadius() {\n    return this.mass > 1 ? this.mass*0.4:1;\n  }\n\n  collides(dust) {\n    let direction = dust.location.substract(this.location);\n    let distance = direction.getLength();\n\n    // Check collision\n    let collidingArea = this.radius + dust.radius;\n    if (distance <= collidingArea) {\n      // let overlap = collidingArea - distance + 0.3;\n      // direction.normalize();\n      // direction.multiplyBy(overlap * -1);\n      // dust.location.substractFrom(direction);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  absorb(dust) {\n    // let direction = dust.location.substract(this.location);\n    // let pRatio = dust.radio / this.radio;\n    //\n    // // Re-position the absorber\n    // direction.normalize();\n    // direction.multiplyBy(pRatio);\n    // this.location.addTo(direction);\n\n    this.mass += dust.mass;\n    this.radius = this.calcRadius();\n\n    if (this.fillStyle === \"#ffffff\") {\n      this.fillStyle = '#'+Math.floor(Math.random()*16777215).toString(16);\n    }\n  }\n\n  attract(dust) {\n    // Attract\n    let collidingArea = this.radius + dust.radius;\n    let direction = dust.location.substract(this.location);\n    let realDistance = direction.getLength();\n    if (realDistance <= collidingArea) {\n\n      let overlap = collidingArea - realDistance;\n      direction.normalize();\n      direction.multiplyBy(overlap);\n      this.velocity.substractFrom(direction);\n      return false;\n    }\n\n    let masPower = this.G * this.mass * dust.mass;\n    let distance = Math.max(100, realDistance);\n    let force = (masPower / (distance * distance));\n\n    direction.normalize();\n    direction.multiplyBy(force);\n    this.applyForce(direction);\n  }\n\n\n  collideElastic(mover) {\n    // Simulates the lost of Kinetic Energy\n    let KE_LOOSE_RATIO = 0.76;\n\n    /*\n     *    Vf~1 = (mass1 - mass2) * Vi~1 / mass1 + mass2\n     *    Vf~2 = 2 * mass1 * Vi~1 / mass1 + mass2\n     */\n     let Vf1 = this.velocity.copy();\n     let Vf2 = this.velocity.copy();\n     let diffMass = (this.mass - mover.mass);\n     let totalMass = (this.mass + mover.mass);\n\n     // Calculate 'final velocity 1'\n     this.velocity.multiplyBy(0);\n     Vf1.multiplyBy(diffMass);\n     Vf1.divideBy(totalMass);\n     Vf1.multiplyBy(KE_LOOSE_RATIO);\n\n\n\n     // Calculate 'final velocity 2'\n     mover.velocity.multiplyBy(0);\n     Vf2.multiplyBy(2 * this.mass);\n     Vf2.divideBy(totalMass);\n     Vf2.multiplyBy(KE_LOOSE_RATIO);\n\n     let recoil = Vf1.getLength() + Vf2.getLength();\n     if (recoil < 0.1) {\n       return recoil;\n     }\n\n     this.velocity = Vf1;\n     mover.velocity = Vf2;\n\n\n     /*\n      let Vf1 = this.velocity.copy();\n      let Vf2 = this.velocity.copy();\n      let diffMass = (this.mass - mover.mass);\n      let totalMass = (this.mass + mover.mass);\n\n      // Calculate 'final velocity 1'\n      this.velocity.multiplyBy(0);\n      Vf1.multiplyBy(diffMass);\n      Vf1.divideBy(totalMass);\n      Vf1.multiplyBy(KE_LOOSE_RATIO);\n\n\n\n      // Calculate 'final velocity 2'\n      mover.velocity.multiplyBy(0);\n      Vf2.multiplyBy(2 * this.mass);\n      Vf2.divideBy(totalMass);\n      Vf2.multiplyBy(KE_LOOSE_RATIO);\n\n      let recoil = Vf1.getLength() + Vf2.getLength();\n      if (recoil < 0.1) {\n        return recoil;\n      }\n\n      this.velocity = Vf1;\n      mover.velocity = Vf2;\n     */\n  }\n\n  collideInelastic(mover) {\n    /*\n     *\n     *\n     */\n     let Vf1 = this.velocity.copy();\n     let Vf2 = this.velocity.copy();\n     let diffMass = (this.mass - mover.mass);\n     let totalMass = (this.mass + mover.mass);\n\n     // Calculate 'final velocity 1'\n     this.velocity.multiplyBy(0);\n     Vf1.multiplyBy(diffMass);\n     Vf1.divideBy(totalMass);\n     this.velocity = Vf1;\n\n     // Calculate 'final velocity 2'\n     mover.velocity.multiplyBy(0);\n     Vf2.multiplyBy(2 * this.mass);\n     Vf2.divideBy(totalMass);\n     mover.velocity = Vf2;\n  }\n\n\n  draw() {\n    let x = this.location.getX();\n    let y = this.location.getY();\n\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n    this.ctx.fillStyle = this.fillStyle;\n    this.ctx.fill();\n  }\n\n  uuid() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n      s4() + '-' + s4() + s4() + s4();\n  }\n}\n","/*\n *  Feature Toggling\n *\n *  Activete/Hide features that are in process of development or under testing\n *  Once a feature is accepted to be includded must be removed from the\n *  feature toggle scheme\n */\n\n const FEATURE_TOGGLE = {\n   FPS_CONTROL: false                // FPS controll for AnimationPlayer class\n };\n\n export default FEATURE_TOGGLE;\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class AnimationPlayer {\n\n    constructor(settings) {\n        settings = settings || {};\n\n        this.window = settings.windowElement || window;\n        this.requestId = null;\n        this.playing = false;\n\n        // FPS control\n        if (FEATURE_TOGGLE.FPS_CONTROL) {\n          this.fps = settings.fps || 90;\n          this.now;\n          this.lastTime = Date.now();\n          this.interval = 1000/this.fps;\n          this.delta;\n        }\n\n    }\n\n    play() {\n        this.playing = true;\n        this.updateFn();\n    }\n\n    stop() {\n        if (!this.playing) {\n            return false;\n        }\n        this.window.cancelAnimationFrame(this.requestId);\n        this.playing = false;\n        this.requestId = null;\n    }\n\n    setUpdateFn(updateFn) {\n        this.updateFn = (\n            () => {\n                this.requestId = this.window.requestAnimationFrame(this.updateFn);\n\n                // FPS control\n                if (FEATURE_TOGGLE.FPS_CONTROL) {\n                  this.now = Date.now();\n                  this.delta = this.now - this.lastTime;\n\n                  if (this.delta > this.interval) {\n                    this.lastTime = this.now - (this.delta % this.interval);\n                    updateFn();\n                  }\n                  return;\n                }\n\n                updateFn();\n\n            });\n    }\n\n    updateFn() {\n        console.warn(\"Player update function has not been set.\");\n    }\n}\n","export default class Monitor {\n\n  constructor() {\n    this.HTMLObject = this.createWrapper();\n    this.outputs = [];\n  }\n\n  out(t, v) {\n    t = t-1;\n    if (!this.outputs[t]) {\n      console.warn(\"Monitor > no output #\" + t);\n      return false;\n    }\n    this.outputs[t].innerHTML = v;\n  }\n\n  newOutput(title) {\n    let e = this.createOutput(title);\n    let v = e.getElementsByTagName(\"SPAN\")[0];\n    this.outputs.push(v);\n    this.HTMLObject.appendChild(e);\n    return this.outputs.length;\n  }\n\n  createWrapper() {\n    let e = document.createElement(\"DIV\");\n    e.setAttribute(\"id\", \"monitorWrapper\");\n    document.getElementsByTagName(\"body\")[0].appendChild(e);\n    return e;\n  }\n\n  createOutput(title) {\n    title = this.sanitize(title);\n\n    let e = document.createElement(\"DIV\");\n    e.setAttribute(\"class\", \"monitor\");\n    e.setAttribute(\"id\", title);\n\n    let head = document.createElement(\"H3\");\n    head.innerHTML = title;\n    e.appendChild(head);\n\n    let val = document.createElement(\"SPAN\");\n    val.innerHTML = \"---\";\n    e.appendChild(val);\n\n    return e;\n  }\n\n  sanitize(s) {\n   return s.replace(/\\W/g, '');\n  }\n\n}\n","import Vector from './Vector';\n\nexport default class Mover {\n\n  constructor(x, y, mass, angle, maxLength, length) {\n    length = length || 0;\n    this.angle = angle || 0\n    this.mass = mass || 1;\n    this.maxLength = maxLength || 0;\n    this.acceleration = new Vector({ x: 0, y: 0 });\n    this.velocity = new Vector({ x: 0, y: 0, length: length });\n    this.location = new Vector({ x: x, y: y });\n  }\n\n  applyForce(force) {\n    // Acceleration = mass / force: create a new vector with it\n    let f = force.divide(this.mass);\n    this.acceleration.addTo(f);\n  }\n\n  update() {\n    if (this.maxLength != 0 && this.velocity.getLength() > this.maxLength) {\n      this.velocity.setLength(this.maxLength);\n    } else {\n      this.velocity.addTo(this.acceleration);\n    }\n\n    this.location.addTo(this.velocity);\n    // Reset acceleration vector\n    this.acceleration.multiplyBy(0);\n  }\n\n  isInside(liquid) {\n    return this.location.getY() > liquid.getY() && this.location.getY() <= liquid.getH() + liquid.getY();\n  }\n\n  drag(liquid) {\n    let speed = this.velocity.getLength();\n    let dragMagnitude = liquid.getC() * speed * speed;\n    let drag = this.velocity.multiply(-1);\n\n    drag.normalize();\n    drag.multiplyBy(dragMagnitude);\n    this.applyForce(drag);\n  }\n\n  checkEdges(width, height) {\n    if (this.location.getX() >= width) {\n      this.location.setX(width);\n      this.velocity.setX(this.velocity.getX() *  -1);\n    } else if (this.location.getX() <= 0) {\n      this.location.setX(0);\n      this.velocity.setX(this.velocity.getX() *  -1);\n    }\n\n    if (this.location.getY() >= height) {\n      this.location.setY(height);\n      this.velocity.setY(this.velocity.getY() * -1);\n    } else if (this.location.getY() <= 0) {\n      this.location.setY(0);\n      this.velocity.setY(this.velocity.getY() * -1);\n    }\n  }\n\n  resetVelocity() {\n    this.velocity.multiplyBy(0);\n  }\n}\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nclass Utils {\n\n  montecarlo() {\n    while(true) {\n      let r1 = Math.random();\n      let p = r1;\n      let r2 = Math.random();\n      if (r2 < p) {\n        return r1;\n      }\n    }\n  }\n\n  lerp(norm, min, max) {\n    return (max - min) * norm + min;\n  }\n\n  quadraticBezier(p0, p1, p2, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 2) * p0.x + (1 - t) * 2 * t * p1.x + t * t * p2.x;\n    pFinal.y = Math.pow(1 - t, 2) * p0.y + (1 - t) * 2 * t * p1.y + t * t * p2.y;\n    return pFinal;\n  }\n\n  cubicBezier(p0, p1, p2, p3, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 3) * p0.x + Math.pow(1 - t, 2) * 3 * t * p1.x + (1 - t) * 3 * t * t * p2.x + t * t * t * p3.x;\n    pFinal.y = Math.pow(1 - t, 3) * p0.y + Math.pow(1 - t, 2) * 3 * t * p1.y + (1 - t) * 3 * t * t * p2.y + t * t * t * p3.y;\n    return pFinal;\n  }\n\n  distance(p0, p1) {\n    let dx = p0.x - p1.x;\n    let dy = p0.y - p1.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  distanceXY(x0, y0, x1, y1) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  // TODO: Check if and why we need to parseInt() the result\n  mapRange(value, low1, high1, low2, high2) {\n    return result = low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n    let result = low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n    if (low2 === parseInt(low2, 10) || high2 === parseInt(high2, 10)) {\n      result = parseInt(result);\n    }\n    return result;\n  }\n\n  inRange(value, min, max) {\n    return value >= Math.min(min, max) && value <= Math.max(min, max);\n  }\n\n  rangeIntersect(min0, max0, min1, max1) {\n    return  Math.max(min0, max0) >= Math.min(min1, max1) &&\n    Math.min(min0, max0) <= Math.max(min1, max1);\n  }\n\n  randomRange(min, max) {\n    return min + Math.random() * (max - min);\n  }\n\n  circleCollision(c0, c1) {\n    return this.distance(c0, c1) <= c0.radius + c1.radius;\n  }\n\n  rectangleCollision(r0, r1) {\n    return  this.rangeIntersect(r0.x, r0.x + r0.width, r1.x, r1.x + r1.width) &&\n    this.rangeIntersect(r0.y, r0.y + r0.height, r1.y, r1.y + r1.height);\n  }\n\n  circlePointCollision(px, py, circle) {\n    return this.distanceXY(px, py, circle.x, circle.y) < circle.radius;\n  }\n\n  rectanglePointCollision(px, py, rect) {\n    return  this.inRange(px, rect.x, rect.x + rect.width) &&\n    this.inRange(py, rect.y, rect.y + rect.height);\n  }\n}\n\nlet instance = new Utils();\n\nexport default instance;\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class Vector {\n\n  constructor(settings) {\n    settings = settings || {};\n    settings.x = settings.x || 0;\n    settings.y = settings.y || 0;\n    settings.length = settings.length || 0;\n    settings.angle = settings.angle || 0;\n\n    this._x = settings.x;\n    this._y = settings.y;\n\n    if (settings.length) {\n      this.setLength(settings.length);\n    }\n    if (settings.angle) {\n      this.setAngle(settings.angle);\n    }\n  }\n\n  setX(value) {\n    this._x = value;\n  }\n\n  getX(value) {\n    return this._x;\n  }\n\n  setY(value) {\n    this._y = value;\n  }\n\n  getY(value) {\n    return this._y;\n  }\n\n  setAngle(angle) {\n    let length = this.getLength();\n    this._x = Math.cos(angle) * length;\n    this._y = Math.sin(angle) * length;\n  }\n\n  getAngle() {\n    return Math.atan2(this._y, this._x);\n  }\n\n  setLength(length) {\n    let angle = this.getAngle();\n    this._x = Math.cos(angle) * length;\n    this._y = Math.sin(angle) * length;\n  }\n\n  getLength() {\n    return Math.sqrt(this._x * this._x + this._y * this._y);\n  }\n\n  add(vector) {\n    return new Vector({ x: this._x + vector.getX(), y: this._y + vector.getY() });\n  }\n\n  substract(vector) {\n    return new Vector({ x: this._x - vector.getX(), y: this._y - vector.getY() });\n  }\n\n  multiply(value) {\n    return new Vector({ x: this._x * value, y: this._y * value });\n  }\n\n  divide(value) {\n    return new Vector({ x: this._x / value, y: this._y / value });\n  }\n\n  addTo(vector) {\n    this._x += vector.getX();\n    this._y += vector.getY();\n  }\n\n  substractFrom(vector) {\n    this._x -= vector.getX();\n    this._y -= vector.getY();\n  }\n\n  multiplyBy(value) {\n    this._x *= value;\n    this._y *= value;\n  }\n\n  divideBy(value) {\n    this._x /= value;\n    this._y /= value;\n  }\n\n  copy() {\n    return new Vector({\n      x: this.getX(),\n      y: this.getY()\n    });\n  }\n\n  normalize() {\n    var length = this.getLength();\n    if (length != 0) {\n      this.divideBy(length);\n    }\n  }\n};\n"]}