{"version":3,"sources":["node_modules/browser-pack/_prelude.js","projects/spaceship/app.js","src/feature-toggle.js","src/lib/AnimationPlayer.js","src/lib/Particle.js","src/lib/Vector.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Particle from '../../src/lib/Particle';\nimport AnimationPlayer from '../../src/lib/AnimationPlayer';\nimport Vector from '../../src/lib/Vector';\n\nwindow.onload = () => {\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const width = canvas.width = window.innerWidth-4;\n    const height = canvas.height = window.innerHeight-4;\n\n    let player = new AnimationPlayer();\n\n    // Ship movement & actions\n    let angle = 0;\n    let turningLeft = false;\n    let turningRight = false;\n    let thrusting = false;\n    let firing = false;\n\n    // Ship drawing\n    let shipSettings = {\n        x: width / 2,\n        y: height / 2,\n        friction: 0.99\n    };\n    let ship = new Particle(shipSettings);\n    let thrust = new Vector({ x: 0, y: 0 });\n    let bullets = [];\n    let numBullets = 0;\n\n    // Demo player\n    player.setUpdateFn(update);\n    player.play();\n\n    // Frame drawing function\n    function update() {\n        ctx.clearRect(0,0, width, height);\n\n        // Ship movement\n        if (turningLeft) {\n            angle -= 0.05;\n        }\n\n        if (turningRight) {\n            angle += 0.05;\n        }\n\n        if (thrusting) {\n            thrust.setAngle(angle);\n            thrust.setLength(0.1);\n        } else {\n            thrust.setLength(0);\n        }\n\n        // Firing adds more bullets\n        if (firing) {\n            let bulletSettings = {\n                x: ship.x,\n                y: ship.y,\n                speed: 1,\n                direction: angle\n            };\n\n            let impulseSettings = {\n                x: ship.x,\n                y: ship.y,\n                length: 1,\n                angle: angle\n            };\n\n            let newBullet = {\n                bullet: new Particle(bulletSettings),\n                impulse: new Vector(impulseSettings)\n            };\n\n            // Add new bullet to the queue\n            bullets.push(newBullet);\n            numBullets = bullets.length;\n        }\n\n        // Update ship position\n        ship.accelerate(thrust.getX(), thrust.getY());\n        ship.update();\n\n        // Draw ship\n        ctx.save();\n        ctx.translate(ship.x, ship.y);\n        ctx.rotate(angle);\n        ctx.beginPath();\n        ctx.moveTo(10, 0);\n        ctx.lineTo(-10, -7);\n        ctx.lineTo(-10, 7);\n        ctx.lineTo(10, 0);\n        ctx.closePath();\n        ctx.fillStyle = \"#000000\";\n        ctx.fill();\n\n        // Draw thrust\n        if (thrusting) {\n            ctx.beginPath();\n            ctx.moveTo(-10, 0);\n            ctx.lineTo(-18, 0);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        ctx.restore();\n\n        // Draw bullets\n        if (numBullets > 0) {\n            for (let i=0;i<numBullets;i++) {\n                // Destroy bullet when it goes out of the screen\n                if (bullets[i].bullet.x > width || bullets[i].bullet.y > height || bullets[i].bullet.y < 0 || bullets[i].bullet.x < 0) {\n                    bullets.splice(i, 1);\n                    numBullets--;\n                    continue;\n                }\n\n                let bullet = bullets[i].bullet;\n                let impulse = bullets[i].impulse;\n\n                // Update bullet\n                bullet.accelerate(impulse.getX(), impulse.getY());\n                bullet.update();\n\n                // Draw bullet\n                ctx.beginPath();\n                ctx.arc(bullet.x, bullet.y, 4, 0, Math.PI * 2, false);\n                ctx.fillStyle = \"#FF0000\";\n                ctx.fill();\n                ctx.closePath();\n                ctx.stroke();\n            }\n        }\n\n\n        // Handle ship positioning when out of sight\n        if (ship.x > width) {\n            ship.x = 0;\n        }\n        if (ship.y > height) {\n            ship.y = 0;\n        }\n        if (ship.x < 0) {\n            ship.x = width;\n        }\n        if (ship.y < 0) {\n            ship.y = height;\n        }\n    }\n\n\n    // Animation control: KeyDown\n    document.body.addEventListener(\"keydown\", (e) => {\n        //console.log(\"Key pressed: \", e.keyCode);\n        switch (e.keyCode) {\n            case 38:                        // Up\n                thrusting = true;\n                break;\n            case 37:                        // Left\n                turningLeft = true;\n                break;\n            case 39:                        // Right\n                turningRight = true;\n                break;\n            case 27:                        // Esc\n                if (player.playing) {\n                    player.stop();\n                    console.log(\"> Scene stopped\");\n                } else {\n                    player.play();\n                    console.log(\"> Playing scene\");\n                }\n                break;\n            default:\n                break;\n        }\n    });\n\n    // Animation control: KeyUp\n    document.body.addEventListener(\"keyup\", (e) => {\n        switch (e.keyCode) {\n            case 38:                        // Up\n                thrusting = false;\n                break;\n            case 37:                        // Left\n                turningLeft = false;\n                break;\n            case 39:                        // Right\n                turningRight = false;\n                break;\n            case 32:                        // Space\n                firing = true;\n                setTimeout(function() {\n                    firing = false;\n                }, 20);\n                break;\n            default:\n                break;\n        }\n    });\n};\n","/*\n *  Feature Toggling\n *\n *  Activete/Hide features that are in process of development or under testing\n *  Once a feature is accepted to be includded must be removed from the\n *  feature toggle scheme\n */\n\n const FEATURE_TOGGLE = {\n   FPS_CONTROL: true                // FPS controll for AnimationPlayer class\n };\n\n export default FEATURE_TOGGLE;\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class AnimationPlayer {\n\n  constructor(settings) {\n    settings = settings || {};\n\n    this.window = settings.windowElement || window;\n    this.requestId = null;\n    this.playing = false;\n\n    // FPS control\n    this.fps = settings.fps || 90;\n    this.now;\n    this.lastTime = Date.now();\n    this.interval = 1000/this.fps;\n    this.delta;\n\n    this.registerEvents();\n  }\n\n  registerEvents() {\n    // Animation control: KeyDown\n    document.body.addEventListener(\"keydown\", (e) => {\n      //console.log(\"Key pressed: \", e.keyCode);\n      switch (e.keyCode) {\n        case 27:                        // Esc\n        if (this.playing) {\n          this.stop();\n          console.log(\"> Scene stopped\");\n        } else {\n          this.play();\n          console.log(\"> Playing scene\");\n        }\n        break;\n\n        case 13:\n        this.stop();\n        this.play();\n        this.stop();\n        console.log(\"> Step forward\");\n        break;\n\n        default:\n        break;\n      }\n    });\n  }\n\n  play() {\n    this.playing = true;\n    this.updateFn();\n  }\n\n  stop() {\n    if (!this.playing) {\n      return false;\n    }\n    this.window.cancelAnimationFrame(this.requestId);\n    this.playing = false;\n    this.requestId = null;\n  }\n\n  setUpdateFn(updateFn) {\n    this.updateFn = (\n      () => {\n        this.requestId = this.window.requestAnimationFrame(this.updateFn);\n        this.now = Date.now();\n        this.delta = this.now - this.lastTime;\n\n        if (this.delta > this.interval) {\n          this.lastTime = this.now - (this.delta % this.interval);\n          updateFn(this.delta, this.lastTime);\n        }\n        return;\n\n\n        updateFn();\n\n      });\n    }\n\n    updateFn() {\n      console.warn(\"Player update function has not been set.\");\n    }\n  }\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class Particle {\n\n  /*\n   *   Pass 'boxBounce' as { w: <with>, h: <height> } to make particle bounce inside a box\n   *\n   **/\n    constructor(settings) {\n        this.x = settings.x || 0;\n        this.y = settings.y || 0;\n        this.vx = (Math.cos(settings.direction) * settings.speed) || 0;\n        this.vy = (Math.sin(settings.direction) * settings.speed) || 0;\n        this.gravity = settings.gravity || 0;\n        this.mass = settings.mass || 1;\n        this.radius = settings.radius || settings.mass * 0.87;\n        this.friction = settings.friction || 1;\n        this.springs = [];\n        this.gravitations = [];\n        this.positionUpdated = false;\n        this.color = settings.color || 'rgba(0,0,0,0.6)';\n        this.boxBounce = settings.boxBounce || false;\n    }\n\n    /*\n     *  Updates the state of the particle\n     */\n    update() {\n        let x = this.x;\n        let y = this.y;\n\n        this.handleSprings();\n        this.handleGravitations();\n        this.vy += this.gravity;\n        this.vx *= this.friction;\n        this.vy *= this.friction;\n        this.x += this.vx;\n        this.y += this.vy;\n\n        if (this.boxBounce) {\n          this.checkBorders(this.boxBounce.w, this.boxBounce.h);\n        }\n\n        if (x !== this.x && y !== this.y) {\n          this.positionUpdated = true;\n        } else {\n\n        }\n    }\n\n    /*\n     *  Gets the length of the velocity vector, which equals to the hypotenuse\n     */\n    getSpeed() {\n        return Math.sqrt(this.vx * this.vx + this.vy * this.vy);\n    }\n\n    /*\n     *  Using the actual Velocity vector's angle, sets a new length for it\n     */\n    setSpeed(speed) {\n        let heading = this.getHeading();\n        this.vx = Math.cos(heading) * speed;\n        this.vy = Math.sin(heading) * speed;\n    }\n\n    /*\n     *  Gets the angle direction of the velocity vector\n     */\n    getHeading() {\n        return Math.atan2(this.vy, this.vx);\n    }\n\n    /*\n     *  Changes the Velocity vector's angle and recalculate coordinates\n     */\n    setHeading(heading) {\n        let speed = this.getSpeed();\n        this.vx = Math.cos(heading) * speed;\n        this.vy = Math.sin(heading) * speed;\n    }\n\n    /*\n     *  Sums to the Velocity vector x and y values\n     */\n    accelerate(x, y) {\n        this.vx += x;\n        this.vy += y;\n    }\n\n    /*\n    *  Bounce if the particle hits the box (i.e. screen) borders\n    */\n    checkBorders(width, height) {\n      if (this.x + this.radius >= width) {\n        this.x = width - this.radius;\n        this.vx *=  -1;\n      } else if (this.x - this.radius <= 0) {\n        this.x = this.radius;\n        this.vx *= -1;\n      }\n\n      if (this.y + this.radius >= height) {\n        this.y = height - this.radius;\n        this.vy *=  -1;\n      } else if (this.y - this.radius <= 0) {\n        this.y = this.radius;\n        this.vy *= -1;\n      }\n    }\n\n    /*\n     *  Calculates the angle between this particle and 'p2'\n     */\n    angleTo(p2) {\n        return Math.atan2(p2.y - this.y, p2.x - this.x);\n    }\n\n    /*\n     *  Calculates the distance to a given particle\n     */\n    distanceTo(p) {\n        let dx = p.x - this.x;\n        let dy = p.y - this.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /*\n     *  Calculates and applies a gravitation vector to a given particle\n     */\n     gravitateTo(p, gravityFactor) {\n         gravityFactor = gravityFactor || 0.04;\n\n         let radiusSum = this.radius + p.radius;\n         let massFactor = this.mass * p.mass;\n\n         let dx = p.x - this.x;\n         let dy = p.y - this.y;\n         let distSQ = (dx * dx) + (dy * dy);\n         let dist = Math.sqrt(distSQ);\n         let surfaceDist = dist - radiusSum;\n\n         // Cancel gravitation once objects collide\n         // TODO: Verify if we can save the Math.sqrt() comparing squares\n         if (dist < radiusSum + 5) {\n           return;\n         }\n\n         //let force = (p.mass) / distSQ; // Force = mass / square of the distance\n         let force = gravityFactor * massFactor / (surfaceDist * surfaceDist);\n\n         let ax = (dx / surfaceDist) * force;\n         let ay = (dy / surfaceDist) * force;\n\n         this.vx += ax;\n         this.vy += ay;\n     }\n\n    /*\n     *  Registers a particle to gravitate to\n     */\n    addGravitation(p) {\n        this.removeGravitation(p);\n        this.gravitations.push(p);\n    }\n\n    /*\n     *  Unregisters a gravitation particle\n     */\n    removeGravitation(p) {\n        let length = this.gravitations.length;\n        for (let i=0; i<length; i++){\n            if (this.gravitations[i] === p) {\n                this.gravitations.slice(i, 1);\n                return true;\n            }\n        }\n    }\n\n    /*\n     *  Gravitates to each registered gravitation particle\n     */\n    handleGravitations() {\n        let length = this.gravitations.length;\n        for (let i=0; i<length; i++){\n            this.gravitateTo(this.gravitations[i]);\n        }\n    }\n\n    /*\n     *  Calculates and applies a spring vector to a given point\n     */\n    springTo(point, k, length) {\n        let dx = point.x - this.x;\n        let dy = point.y - this.y;\n        let distance = Math.sqrt(dx * dx + dy * dy);\n        let force = (distance - length || 0) * k;\n        // Instead of getting cos / sin of angle, divide sides by hypotenuse\n        this.vx += (dx / distance) * force;\n        this.vy += (dy / distance) * force;\n    }\n\n    /*\n     *  Registers a new spring point\n     */\n    addSpring(point, k, length) {\n        this.removeSpring(point);\n        this.springs.push({\n            point: point,\n            k: k,\n            length: length || 0\n        });\n    }\n\n    /*\n     *  Unregisters a spring point\n     */\n    removeSpring(point) {\n        let length = this.springs.length;\n        for (let i=0; i<length; i++){\n            if (this.springs[i].point === point) {\n                this.springs.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n\n    /*\n     *  Springs to each registered spring point\n     */\n    handleSprings() {\n        let length = this.springs.length;\n        for (let i=0; i<length; i++){\n            let spring = this.springs[i];\n            this.springTo(spring.point, spring.k, spring.length);\n        }\n    }\n}\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class Vector {\n\n  constructor(settings) {\n    settings = settings || {};\n    settings.x = settings.x || 0;\n    settings.y = settings.y || 0;\n    settings.length = settings.length || 0;\n    settings.angle = settings.angle || 0;\n\n    this._x = settings.x;\n    this._y = settings.y;\n\n    if (settings.length) {\n      this.setLength(settings.length);\n    }\n    if (settings.angle) {\n      this.setAngle(settings.angle);\n    }\n  }\n\n  setX(value) {\n    this._x = value;\n  }\n\n  getX(value) {\n    return this._x;\n  }\n\n  setY(value) {\n    this._y = value;\n  }\n\n  getY(value) {\n    return this._y;\n  }\n\n  setAngle(angle) {\n    let length = this.getLength();\n    this._x = Math.cos(angle) * length;\n    this._y = Math.sin(angle) * length;\n  }\n\n  getAngle() {\n    return Math.atan2(this._y, this._x);\n  }\n\n  setLength(length) {\n    let angle = this.getAngle();\n    this._x = Math.cos(angle) * length;\n    this._y = Math.sin(angle) * length;\n  }\n\n  getLength() {\n    return Math.sqrt(this._x * this._x + this._y * this._y);\n  }\n\n  add(vector) {\n    return new Vector({ x: this._x + vector.getX(), y: this._y + vector.getY() });\n  }\n\n  substract(vector) {\n    return new Vector({ x: this._x - vector.getX(), y: this._y - vector.getY() });\n  }\n\n  multiply(value) {\n    return new Vector({ x: this._x * value, y: this._y * value });\n  }\n\n  divide(value) {\n    return new Vector({ x: this._x / value, y: this._y / value });\n  }\n\n  addTo(vector) {\n    this._x += vector.getX();\n    this._y += vector.getY();\n  }\n\n  substractFrom(vector) {\n    this._x -= vector.getX();\n    this._y -= vector.getY();\n  }\n\n  multiplyBy(value) {\n    this._x *= value;\n    this._y *= value;\n  }\n\n  divideBy(value) {\n    this._x /= value;\n    this._y /= value;\n  }\n\n  copy() {\n    return new Vector({\n      x: this.getX(),\n      y: this.getY()\n    });\n  }\n\n  normalize() {\n    var length = this.getLength();\n    if (length != 0) {\n      this.divideBy(length);\n    }\n  }\n\n  limit(n) {\n    if (this.getLength() > n) {\n      this.setLength(n);\n    }\n  }\n};\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}