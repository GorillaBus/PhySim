{"version":3,"sources":["node_modules/browser-pack/_prelude.js","projects/uniform-distribution-meter/app.js","src/feature-toggle.js","src/lib/AnimationPlayer.js","src/lib/Utils.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import AnimationPlayer from '../../src/lib/AnimationPlayer';\nimport Utils from '../../src/lib/Utils';\n\nwindow.onload = () => {\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const width = window.innerWidth;\n    const height = window.innerHeight-4;\n    const center = { x: width/2, y: height/2 };\n\n    let player = new AnimationPlayer();\n    let randomCount = new Array(10).fill(0);\n    let barWidth = 50;\n    let margin = 50;\n    let offset = (width / 2) - ((randomCount.length * barWidth) + (randomCount.length * margin)) / 2;\n\n    // Canvas setup\n    canvas.height = height;\n    canvas.width = width;\n    canvas.style.backgroundColor=\"#999999\";\n\n    createUI();\n\n    // Player setup\n    player.setUpdateFn(update);\n    player.play();\n\n    // Frame drawing function\n    function update() {\n        ctx.clearRect(0,0, width, height);\n\n        //let index = Math.floor(Math.random() * (10 - 0 + 1)) + 0;\n        let index = Math.floor(Utils.montecarlo() * (10 - 0 + 1)) + 0;\n        randomCount[index]++;\n\n        for (let i=0; i<randomCount.length; i++) {\n          let barHeight = randomCount[i] * -1 || 0;\n          let xPos = offset + (i * barWidth) + (i * margin);\n\n          ctx.beginPath();\n          ctx.fillStyle = \"#000000\";\n          ctx.fillRect(xPos, height/1.2, barWidth, barHeight);\n          ctx.closePath();\n        }\n    }\n\n    // Animation control: KeyDown\n    document.body.addEventListener(\"keydown\", (e) => {\n        //console.log(\"Key pressed: \", e.keyCode);\n        switch (e.keyCode) {\n            case 27:                        // Esc\n                if (player.playing) {\n                    player.stop();\n                    console.log(\"> Scene stopped\");\n                } else {\n                    player.play();\n                    console.log(\"> Playing scene\");\n                }\n                break;\n            default:\n                break;\n        }\n    });\n\n    // Display title and legends under bars\n    function createUI() {\n      let documentElement = document.getElementsByTagName(\"BODY\")[0];\n      let H1 = document.createElement(\"H1\");\n      H1.innerHTML = \"Generating uniformly-distributed pseudo-random numbers from 0 to 9\";\n      documentElement.appendChild(H1);\n\n      for (let i=0; i<randomCount.length; i++) {\n        let xPos = offset + (i * barWidth) + (i * margin);\n        let SPAN = document.createElement(\"SPAN\");\n        SPAN.style.left =  xPos +\"px\";\n        SPAN.style.top = (height/1.18) + \"px\";\n        SPAN.style.width = barWidth + \"px\";\n        SPAN.innerHTML = i;\n        documentElement.appendChild(SPAN);\n      }\n    }\n\n};\n","/*\n *  Feature Toggling\n *\n *  Activete/Hide features that are in process of development or under testing\n *  Once a feature is accepted to be includded must be removed from the\n *  feature toggle scheme\n */\n\n const FEATURE_TOGGLE = {\n   FPS_CONTROL: true                // FPS controll for AnimationPlayer class\n };\n\n export default FEATURE_TOGGLE;\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class AnimationPlayer {\n\n  constructor(settings) {\n    settings = settings || {};\n\n    this.window = settings.windowElement || window;\n    this.requestId = null;\n    this.playing = false;\n\n    // FPS control\n    this.fps = settings.fps || 90;\n    this.now;\n    this.lastTime = Date.now();\n    this.interval = 1000/this.fps;\n    this.delta;\n\n    this.registerEvents();\n  }\n\n  registerEvents() {\n    // Animation control: KeyDown\n    document.body.addEventListener(\"keydown\", (e) => {\n      //console.log(\"Key pressed: \", e.keyCode);\n      switch (e.keyCode) {\n        case 27:                        // Esc\n        if (this.playing) {\n          this.stop();\n          console.log(\"> Scene stopped\");\n        } else {\n          this.play();\n          console.log(\"> Playing scene\");\n        }\n        break;\n\n        case 13:\n        this.stop();\n        this.play();\n        this.stop();\n        console.log(\"> Step forward\");\n        break;\n\n        default:\n        break;\n      }\n    });\n  }\n\n  play() {\n    this.playing = true;\n    this.updateFn();\n  }\n\n  stop() {\n    if (!this.playing) {\n      return false;\n    }\n    this.window.cancelAnimationFrame(this.requestId);\n    this.playing = false;\n    this.requestId = null;\n  }\n\n  setUpdateFn(updateFn) {\n    this.updateFn = (\n      () => {\n        this.requestId = this.window.requestAnimationFrame(this.updateFn);\n        this.now = Date.now();\n        this.delta = this.now - this.lastTime;\n\n        if (this.delta > this.interval) {\n          this.lastTime = this.now - (this.delta % this.interval);\n          updateFn(this.delta, this.lastTime);\n        }\n        return;\n\n\n        updateFn();\n\n      });\n    }\n\n    updateFn() {\n      console.warn(\"Player update function has not been set.\");\n    }\n  }\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nclass Utils {\n\n  constructor() {\n    this.cache = {};\n  }\n\n  cacheStore(caller, key, value) {\n    if (!this.cache.hasOwnProperty(caller)) {\n      this.cache[caller] = {};\n    }\n    this.cache[caller][key] = value;\n  }\n\n  cacheRetrieve(caller, key) {\n    let fnCache = this.cache[caller] || [];\n    let value = fnCache[key] || false;\n    return value;\n  }\n\n  /*\n   *  Get 'n' points from a circular shaped 'Particle' object\n   */\n  getCirclePoints(p, n, radius) {\n    n = n || 8;\n    radius = radius || p.radius || 0;\n\n    let angle = -1;\n    let angleStep = (Math.PI * 2) / n;\n    let points = [];\n\n    for (let i=0; i<n; i++) {\n      let cData = this.cacheRetrieve(\"getCirclePoints\", angle);\n      let cos = cData.cos || Math.cos(angle);\n      let sin = cData.sin || Math.sin(angle);\n      let pt = {\n        x: p.x + (cos * p.radius),\n        y: p.y + (sin * p.radius)\n      };\n      points.push(pt);\n      if (!cData) {\n        this.cacheStore(\"getCirclePoints\", angle, {cos: cos, sin: sin});\n      }\n      angle += angleStep;\n    }\n\n    // Add the center point\n    return points;\n  }\n\n  montecarlo() {\n    while(true) {\n      let r1 = Math.random();\n      let p = r1;\n      let r2 = Math.random();\n      if (r2 < p) {\n        return r1;\n      }\n    }\n  }\n\n  lerp(norm, min, max) {\n    return (max - min) * norm + min;\n  }\n\n  quadraticBezier(p0, p1, p2, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 2) * p0.x + (1 - t) * 2 * t * p1.x + t * t * p2.x;\n    pFinal.y = Math.pow(1 - t, 2) * p0.y + (1 - t) * 2 * t * p1.y + t * t * p2.y;\n    return pFinal;\n  }\n\n  cubicBezier(p0, p1, p2, p3, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 3) * p0.x + Math.pow(1 - t, 2) * 3 * t * p1.x + (1 - t) * 3 * t * t * p2.x + t * t * t * p3.x;\n    pFinal.y = Math.pow(1 - t, 3) * p0.y + Math.pow(1 - t, 2) * 3 * t * p1.y + (1 - t) * 3 * t * t * p2.y + t * t * t * p3.y;\n    return pFinal;\n  }\n\n  distance(p0, p1) {\n    let dx = p0.x - p1.x;\n    let dy = p0.y - p1.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  distanceXY(x0, y0, x1, y1) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  // TODO: Check if and why we need to parseInt() the result\n  mapRange(value, low1, high1, low2, high2) {\n    return result = low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n    let result = low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n    if (low2 === parseInt(low2, 10) || high2 === parseInt(high2, 10)) {\n      result = parseInt(result);\n    }\n    return result;\n  }\n\n  inRange(value, min, max) {\n    return value >= Math.min(min, max) && value <= Math.max(min, max);\n  }\n\n  rangeIntersect(min0, max0, min1, max1) {\n    return  Math.max(min0, max0) >= Math.min(min1, max1) &&\n    Math.min(min0, max0) <= Math.max(min1, max1);\n  }\n\n  randomRange(min, max) {\n    return min + Math.random() * (max - min);\n  }\n\n  constrain(e,t,r) {\n    return e>r?r:e<t?t:e;\n  }\n\n  circleCollision(c0, c1) {\n    return this.distance(c0, c1) <= c0.radius + c1.radius;\n  }\n\n  rectangleCollision(r0, r1) {\n    return  this.rangeIntersect(r0.x, r0.x + r0.width, r1.x, r1.x + r1.width) &&\n    this.rangeIntersect(r0.y, r0.y + r0.height, r1.y, r1.y + r1.height);\n  }\n\n  circlePointCollision(px, py, circle) {\n    return this.distanceXY(px, py, circle.x, circle.y) < circle.radius;\n  }\n\n  rectanglePointCollision(px, py, rect) {\n    return  this.inRange(px, rect.x, rect.x + rect.width) &&\n    this.inRange(py, rect.y, rect.y + rect.height);\n  }\n\n  uniqueID() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n      s4() + '-' + s4() + s4() + s4();\n  }\n\n  randomColor() {\n    return \"#000000\".replace(/0/g,function(){return (~~(Math.random()*16)).toString(16);});\n  }\n}\n\nlet instance = new Utils();\n\nexport default instance;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}