{"version":3,"sources":["node_modules/browser-pack/_prelude.js","projects/solar-sys/app.js","projects/solar-sys/lib/Planet.js","src/feature-toggle.js","src/lib/AnimationPlayer.js","src/lib/Particle.js"],"names":[],"mappings":"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","file":"app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Planet from './lib/Planet';\nimport AnimationPlayer from '../../src/lib/AnimationPlayer';\n\nwindow.onload = () => {\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const width = canvas.width = window.innerWidth-4;\n    const height = canvas.height = window.innerHeight-4;\n    const center = {\n      x: width / 2,\n      y: height / 2\n    };\n\n    // World data\n    let world = {\n      ctx: ctx,\n      width: width,\n      height: height,\n      center: center,\n      scale: 1,\n      lastScale: 1,\n      trans_x: 0,\n      trans_y: 0,\n      update: function() {\n        this.lastScale = this.scale;\n      }\n    };\n\n    let player = new AnimationPlayer();\n\n    let sunSetup = {\n        x: center.x,\n        y: center.y,\n        mass: 300,\n        speed: 0,\n        color: \"yellow\",\n        type: \"sun\",\n        center: false\n    };\n\n    let planetsSetup = [{\n        x: center.x + 104,\n        y: center.y,\n        speed: 1.5,\n        direction: Math.PI / 2,\n        color: '#46A543',\n        mass: 4.5,\n        type: \"planet\",\n        center: false\n     },{\n        x: center.x - 170,\n        y: center.y,\n        speed: 1.2,\n        direction: -Math.PI / 2,\n        color: 'CornflowerBlue',\n        mass: 11,\n        type: \"planet\",\n        center: true\n    },{\n        x: center.x - 230,\n        y: center.y,\n        speed: 1,\n        direction: -Math.PI / 2,\n        color: 'DarkGoldenRod',\n        mass: 18,\n        type: \"planet\",\n        center: false\n    },{\n        x: center.x - 290,\n        y: center.y,\n        speed: 0.9,\n        direction: -Math.PI / 2,\n        color: 'maroon',\n        mass: 27,\n        type: \"planet\",\n        center: false\n    },{\n        x: center.x + 292,\n        y: center.y,\n        speed: 0.9,\n        direction: Math.PI / 2,\n        color: '#9E51C9',\n        mass: 27,\n        type: \"planet\",\n        center: false\n    },{\n        x: center.x - 460,\n        y: center.y,\n        speed: 0.8,\n        direction: -Math.PI / 2,\n        color: 'DarkOliveGreen',\n        mass: 173,\n        type: \"planet\",\n        center: false\n    },{\n        x: center.x + 549,\n        y: center.y,\n        speed: 0.8,\n        direction: Math.PI / 2,\n        color: 'DarkGray',\n        mass: 43,\n        type: \"planet\",\n        center: false\n     }];\n\n    // Setup planets\n    let planets = createPlanets(planetsSetup);\n\n    // Setup sun\n    let sun = createSun(sunSetup);\n\n    // All celestial bodies\n    planets.push(sun);\n\n    // Demo player\n    player.setUpdateFn(update);\n    player.play();\n\n\n    // Reference framework\n    let ctxX;\n    let ctxY;\n    let centerObject;\n\n    // Frame drawing function\n    function update() {\n      ctx.clearRect(-world.width, -world.height, world.width*2, world.height*2);\n\n      let totalPlanets = planets.length;\n\n      // Update planets\n      for (let i=0; i<totalPlanets; i++) {\n        let p = planets[i];\n        p.update();\n\n        if (p.type === \"planet\") {\n          planets[i].gravitateTo(sun);\n        }\n\n        // Adjust reference framework to the center body: planet or sun\n        if (p.center) {\n          centerObject = p;\n          ctxX = (world.center.x - p.x) * world.scale + world.trans_x;\n          ctxY = (world.center.y - p.y) * world.scale + world.trans_y;\n        }\n\n      }\n\n      ctx.save();\n      ctx.translate(ctxX, ctxY);\n\n      // Draw planets\n      for (let i=0; i<totalPlanets; i++) {\n        let p = planets[i];\n\n        if (p.center) {\n          continue;\n        }\n\n        p.draw(sun);\n      }\n\n      ctx.restore();\n\n      // Draw center body\n      centerObject.draw(sun);\n    }\n\n\n    /** Helpers **/\n\n    function createSun(config) {\n      return new Planet(config, world);\n    }\n\n    function createPlanets(config) {\n        let total = config.length;\n        let planets = [];\n\n        for (let i=0; i<total; i++) {\n          let p = new Planet(config[i], world);\n          planets.push(p);\n        }\n        return planets;\n    }\n\n\n    function test() {\n      let canvas2 = document.createElement(\"canvas\");\n      canvas2.width = 300;\n      canvas2.height = 300;\n\n      let ctx2 = canvas2.getContext(\"2d\");\n      ctx2.fillStyle = \"white\";\n      ctx2.arc(150, 150, 150, 0, Math.PI * 2, true);\n      ctx2.fill();\n\n      ctx.drawImage(canvas2, 200, 200)\n    }\n\n    function createShadow(p, lightSource, shadowImageSafeEdge, shadowBlur){\n      shadowImageSafeEdge = shadowImageSafeEdge || 2;\n      shadowBlur = shadowBlur || 0.8;\n\n      let r = p.radius;\n      let s = shadowImageSafeEdge;\n      let planetShadow = document.createElement(\"canvas\");\n      planetShadow.width = planetShadow.height = (r * s + s * 2) * SCALE; // a little room to stop hard edge if zooming\n      let shadowCtx = planetShadow.shadowCtx = planetShadow.getContext(\"2d\");\n      shadowCtx.shadowBlur = r * shadowBlur  ;\n      shadowCtx.shadowOffsetX = shadowCtx.shadowOffsetY = 0;\n      shadowCtx.lineWidth = (r * 2 - r * (1 - shadowBlur / 2)) * SCALE;\n      shadowCtx.strokeStyle = shadowCtx.shadowColor = \"rgba(0,0,0,1)\";\n      shadowCtx.beginPath();\n      shadowCtx.arc(-r * SCALE, r * SCALE, (0 + r * 2 + r * (shadowBlur /0.95) + s) * SCALE, 0, Math.PI * 2);\n      shadowCtx.stroke();\n      shadowCtx.stroke();\n      shadowCtx.stroke();\n\n      shadowCtx.shadowColor = \"rgba(0,0,0,0)\";\n      shadowCtx.globalCompositeOperation = \"destination-in\";\n      shadowCtx.beginPath();\n      shadowCtx.arc((r + s) * SCALE, (r + s) * SCALE, r * SCALE, 0, Math.PI * 2);  // sun will be along x axis\n      shadowCtx.fill();\n\n      shadowCtx.globalCompositeOperation = \"source-over\";\n      return planetShadow;\n    }\n\n\n    /** Events **/\n\n    // Animation control: KeyDown\n    document.body.addEventListener(\"keydown\", (e) => {\n        //console.log(\"Key pressed: \", e.keyCode);\n        switch (e.keyCode) {\n            case 27:                        // Esc\n              if (player.playing) {\n                  player.stop();\n                  console.log(\"> Scene stopped\");\n              } else {\n                  player.play();\n                  console.log(\"> Playing scene\");\n              }\n              break;\n              case 13:                        // Esc\n                if (player.playing) {\n                    player.stop();\n                }\n\n                player.play();\n                player.stop();\n\n                break;\n            default:\n                break;\n        }\n    });\n\n    document.body.addEventListener(\"mousewheel\", MouseWheelHandler, false);\n\n    function MouseWheelHandler(e) {\n      let delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));\n      let scaleFactor = world.scale * 0.1;\n      if(delta > 0){\n          world.scale += scaleFactor;\n      } else {\n          world.scale -= scaleFactor;\n      }\n    }\n\n};\n","import Particle from '../../../src/lib/Particle';\n\nexport default class Planet extends Particle {\n\n  constructor(settings, world) {\n    super(settings);\n\n    this.world = world;\n    this.ctx = world.ctx;\n\n    this.color = settings.color;\n    this.radius = settings.mass * 0.2;\n    this.type = settings.type;\n    this.center = settings.center;\n\n    this.scaledX = 0;\n    this.scaledY = 0;\n    this.scaledR = 0;\n\n    this.reScale();\n\n    this.grad = this.type === \"sun\" ? this.createGradient():null;\n  }\n\n  reScale() {\n    this.scaledX = (this.x - this.world.center.x) * this.world.scale + this.world.center.x + this.world.trans_x;\n    this.scaledY = (this.y - this.world.center.y) * this.world.scale + this.world.center.y + this.world.trans_y;\n    this.scaledR = this.radius * this.world.scale;\n  }\n\n  draw(sun) {\n    this.reScale();\n\n    if (this.scaledR < 0) {\n      return;\n    }\n\n    switch (this.type) {\n      case \"planet\":\n        this.drawPlanet(sun);\n        break;\n\n      case \"sun\":\n        this.drawSun();\n        break;\n    }\n  }\n\n  drawSun() {\n    if (this.world.scale != this.world.lastScale) {\n      this.grad = this.createGradient();\n      this.world.update();\n    }\n\n    this.ctx.fillStyle = this.grad;\n    this.ctx.beginPath();\n    this.ctx.arc(this.scaledX, this.scaledY, this.scaledR, 0, Math.PI * 2);\n    this.ctx.fill();\n  }\n\n  drawPlanet(lightSource) {\n    let x, y;\n    switch (this.center) {\n      case false:\n        x = this.scaledX;\n        y = this.scaledY;\n        break;\n      case true:\n        x = this.world.center.x;\n        y = this.world.center.y;\n        break;\n    }\n\n    this.ctx.beginPath();\n    this.ctx.fillStyle = this.color;\n    this.ctx.arc(x, y, this.scaledR, 0, Math.PI * 2, false);\n    this.ctx.fill();\n\n    this.drawShadow(lightSource);\n  }\n\n  drawShadow(lightSource) {\n\n    // Get distance from source\n    let dx = this.scaledX - lightSource.scaledX;\n    let dy = this.scaledY - lightSource.scaledY;\n    let dist = Math.sqrt(dx * dx + dy * dy);\n    let angle;\n\n    // Get the angle depending on the reference framework\n    if (this.center) {\n      dx = this.x - lightSource.x;\n      dy = this.y - lightSource.y;\n      angle = Math.atan2(dy, dx);\n    } else {\n      angle = Math.atan2(dy, dx);\n    }\n\n    // Shape props\n    let radius = this.scaledR;\n\n    // Shadow props\n    let sX, sY;\n    let shadowRadius = radius * 6.4;\n    let shadowLineWidth = radius * 1.1;\n    let shadowBlur = shadowRadius * 0.04;\n\n    // Calculate shadow-circle's coordinates\n    let x = lightSource.x + Math.cos(angle) * (dist - shadowRadius + radius * 0.58);\n    let y = lightSource.y + Math.sin(angle) * (dist - shadowRadius + radius * 0.58);\n\n    // Shadow setup\n    this.ctx.save();\n\n    this.ctx.shadowOffsetX = 0;\n    this.ctx.shadowOffsetY = 0;\n    this.ctx.shadowBlur = shadowBlur;\n    this.ctx.shadowColor = 'rgba(0,0,0,1)';\n\n    //clip range by planet area.\n    this.ctx.clip();\n\n    // Draw shadow\n    this.ctx.beginPath();\n    this.ctx.lineWidth = shadowLineWidth;\n    this.ctx.strokeStyle = 'rgba(0,0,0,1)';\n    this.ctx.arc(x, y, shadowRadius, 0, Math.PI*2);\n    this.ctx.stroke();\n    this.ctx.stroke();\n\n    this.ctx.restore();\n  }\n\n  createGradient() {\n    let grad = this.ctx.createRadialGradient(this.scaledX, this.scaledY, this.scaledR/4, this.scaledX, this.scaledY, this.scaledR);\n    grad.addColorStop(0,\"#FF7\");\n    grad.addColorStop(0.6,\"#FF4\");\n    grad.addColorStop(0.8,\"#FF0\");\n    grad.addColorStop(1,\"#DC0\");\n    return grad;\n  }\n};\n","/*\n *  Feature Toggling\n *\n *  Activete/Hide features that are in process of development or under testing\n *  Once a feature is accepted to be includded must be removed from the\n *  feature toggle scheme\n */\n\n const FEATURE_TOGGLE = {\n   FPS_CONTROL: true                // FPS controll for AnimationPlayer class\n };\n\n export default FEATURE_TOGGLE;\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class AnimationPlayer {\n\n    constructor(settings) {\n        settings = settings || {};\n\n        this.window = settings.windowElement || window;\n        this.requestId = null;\n        this.playing = false;\n\n        // FPS control\n        if (FEATURE_TOGGLE.FPS_CONTROL) {\n          this.fps = settings.fps || 90;\n          this.now;\n          this.lastTime = Date.now();\n          this.interval = 1000/this.fps;\n          this.delta;\n        }\n\n    }\n\n    play() {\n        this.playing = true;\n        this.updateFn();\n    }\n\n    stop() {\n        if (!this.playing) {\n            return false;\n        }\n        this.window.cancelAnimationFrame(this.requestId);\n        this.playing = false;\n        this.requestId = null;\n    }\n\n    setUpdateFn(updateFn) {\n        this.updateFn = (\n            () => {\n                this.requestId = this.window.requestAnimationFrame(this.updateFn);\n\n                // FPS control\n                if (FEATURE_TOGGLE.FPS_CONTROL) {\n                  this.now = Date.now();\n                  this.delta = this.now - this.lastTime;\n\n                  if (this.delta > this.interval) {\n                    this.lastTime = this.now - (this.delta % this.interval);\n                    updateFn();\n                  }\n                  return;\n                }\n\n                updateFn();\n\n            });\n    }\n\n    updateFn() {\n        console.warn(\"Player update function has not been set.\");\n    }\n}\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class Particle {\n\n    constructor(settings) {\n        this.x = settings.x || 0;\n        this.y = settings.y || 0;\n        this.vx = (Math.cos(settings.direction) * settings.speed) || 0;\n        this.vy = (Math.sin(settings.direction) * settings.speed) || 0;\n        this.gravity = settings.gravity || 0;\n        this.mass = settings.mass || 1;\n        this.radius = settings.radius || settings.mass * 0.87;\n        this.friction = settings.friction || 1;\n        this.springs = [];\n        this.gravitations = [];\n\n        this.shape = settings.shape || \"circle\";\n        this.mapperRegions = settings.mapperRegions || {};\n        this.color = settings.color || \"#000000\";\n        this.points = settings.points || [];\n        this.boxBounce = settings.boxBounce || false;\n        this.collisions = [];\n\n        this.id = this.uuid();  // Auto-generate a unique ID\n    }\n\n    /*\n     *  Updates the state of the particle\n     */\n    update() {\n        this.handleSprings();\n        this.handleGravitations();\n        this.vy += this.gravity;\n        this.vx *= this.friction;\n        this.vy *= this.friction;\n        this.x += this.vx;\n        this.y += this.vy;\n\n        if (this.boxBounce) {\n          this.checkBorders(this.boxBounce.w, this.boxBounce.h);\n        }\n    }\n\n    /*\n     *  Gets the length of the velocity vector, which equals to the hypotenuse\n     */\n    getSpeed() {\n        return Math.sqrt(this.vx * this.vx + this.vy * this.vy);\n    }\n\n    /*\n     *  Using the actual Velocity vector's angle, sets a new length for it\n     */\n    setSpeed(speed) {\n        let heading = this.getHeading();\n        this.vx = Math.cos(heading) * speed;\n        this.vy = Math.sin(heading) * speed;\n    }\n\n    /*\n     *  Gets the angle direction of the velocity vector\n     */\n    getHeading() {\n        return Math.atan2(this.vy, this.vx);\n    }\n\n    /*\n     *  Changes the Velocity vector's angle and recalculate coordinates\n     */\n    setHeading(heading) {\n        let speed = this.getSpeed();\n        this.vx = Math.cos(heading) * speed;\n        this.vy = Math.sin(heading) * speed;\n    }\n\n    /*\n     *  Sums to the Velocity vector x and y values\n     */\n    accelerate(x, y) {\n        this.vx += x;\n        this.vy += y;\n    }\n\n    /*\n    *  Bounce if the particle hits the box (i.e. screen) borders\n    */\n    checkBorders(width, height) {\n      if (this.x + this.radius >= width) {\n        this.x = width - this.radius;\n        this.vx *=  -1;\n      } else if (this.x - this.radius <= 0) {\n        this.x = this.radius;\n        this.vx *= -1;\n      }\n\n      if (this.y + this.radius >= height) {\n        this.y = height - this.radius;\n        this.vy *=  -1;\n      } else if (this.y - this.radius <= 0) {\n        this.y = this.radius;\n        this.vy *= -1;\n      }\n    }\n\n    /*\n     *  Calculates the angle between this particle and 'p2'\n     */\n    angleTo(p2) {\n        return Math.atan2(p2.y - this.y, p2.x - this.x);\n    }\n\n    /*\n     *  Calculates the distance to a given particle\n     */\n    distanceTo(p) {\n        let dx = p.x - this.x;\n        let dy = p.y - this.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /*\n     *  Calculates and applies a gravitation vector to a given particle\n     */\n    gravitateTo(p, limit) {\n      limit = limit || false;\n\n      let dx = p.x - this.x;\n      let dy = p.y - this.y;\n      let distSQ = (dx * dx) + (dy * dy);\n      let dist = (p.radius + this.radius) + Math.sqrt(distSQ);\n\n      // If particles are already colliding cancel gravitation\n      if (limit && dist <= 0) {\n        return;\n      }\n\n      let force = (p.mass) / distSQ; // Force = mass / square of the distance\n      /*\n      cos * hypotenuse = opposite side || cos = opposite side / hypotenuse\n      sin * hypotenuse = adjacent side || sin = adjacent side / hypotenuse\n\n      That being said, we can optimize this:\n      let angle = this.angleTo(p);\n      let ax = Math.cos(angle) * force;\n      let ay = Math.sin(angle) * force;\n\n      And save three trigo functions\n      */\n      let ax = (dx / dist) * force;\n      let ay = (dy / dist) * force;\n\n      this.vx += ax;\n      this.vy += ay;\n    }\n\n    /*\n     *  Registers a particle to gravitate to\n     */\n    addGravitation(p) {\n        this.removeGravitation(p);\n        this.gravitations.push(p);\n    }\n\n    /*\n     *  Unregisters a gravitation particle\n     */\n    removeGravitation(p) {\n        let length = this.gravitations.length;\n        for (let i=0; i<length; i++){\n            if (this.gravitations[i] === p) {\n                this.gravitations.slice(i, 1);\n                return true;\n            }\n        }\n    }\n\n    /*\n     *  Gravitates to each registered gravitation particle\n     */\n    handleGravitations() {\n        let length = this.gravitations.length;\n        for (let i=0; i<length; i++){\n            this.gravitateTo(this.gravitations[i]);\n        }\n    }\n\n    /*\n     *  Calculates and applies a spring vector to a given point\n     */\n    springTo(point, k, length) {\n        let dx = point.x - this.x;\n        let dy = point.y - this.y;\n        let distance = Math.sqrt(dx * dx + dy * dy);\n        let force = (distance - length || 0) * k;\n        // Instead of getting cos / sin of angle, divide sides by hypotenuse\n        this.vx += (dx / distance) * force;\n        this.vy += (dy / distance) * force;\n    }\n\n    /*\n     *  Registers a new spring point\n     */\n    addSpring(point, k, length) {\n        this.removeSpring(point);\n        this.springs.push({\n            point: point,\n            k: k,\n            length: length || 0\n        });\n    }\n\n    /*\n     *  Unregisters a spring point\n     */\n    removeSpring(point) {\n        let length = this.springs.length;\n        for (let i=0; i<length; i++){\n            if (this.springs[i].point === point) {\n                this.springs.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n\n    /*\n     *  Springs to each registered spring point\n     */\n    handleSprings() {\n        let length = this.springs.length;\n        for (let i=0; i<length; i++){\n            let spring = this.springs[i];\n            this.springTo(spring.point, spring.k, spring.length);\n        }\n    }\n\n    uuid() {\n      function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n      }\n      return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n        s4() + '-' + s4() + s4() + s4();\n    }\n}\n"]}