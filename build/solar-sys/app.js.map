{"version":3,"sources":["node_modules/browser-pack/_prelude.js","projects/solar-sys/app.js","projects/solar-sys/lib/CelestialBody.js","projects/solar-sys/lib/Planet.js","projects/solar-sys/lib/Star.js","src/feature-toggle.js","src/lib/AnimationPlayer.js","src/lib/Particle.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Star from './lib/Star';\nimport Planet from './lib/Planet';\nimport AnimationPlayer from '../../src/lib/AnimationPlayer';\n\nwindow.onload = () => {\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const width = canvas.width = window.innerWidth-4;\n    const height = canvas.height = window.innerHeight-4;\n    const center = {\n      x: width / 2,\n      y: height / 2\n    };\n\n    // World data\n    let world = {\n      ctx: ctx,\n      width: width,\n      height: height,\n      center: center,\n      scale: 1,\n      lastScale: 0,\n      trans_x: 0,\n      trans_y: 0,\n      needsUpdate: false,\n      update: function() {\n        this.needsUpdate = this.lastScale != this.scale;\n      }\n    };\n\n    let player = new AnimationPlayer({ fps: 60 });\n\n    let sunSetup = {\n        x: center.x,\n        y: center.y,\n        mass: 500,\n        speed: 0,\n        color: \"#D6D32D\",\n        center: false\n    };\n\n    let planetsSetup = [{\n        x: center.x + 504,\n        y: center.y,\n        speed: 1.428,\n        direction: Math.PI / 2,\n        color: '#FA1616',\n        mass: 25.5,\n        center: false\n     },{\n        x: center.x + 220,\n        y: center.y,\n        speed: 2.41876606819402505,\n        direction: Math.PI / 2,\n        color: '#808231',\n        mass: 10,\n        center: false\n    },{\n        x: center.x - 380,\n        y: center.y,\n        speed: 1.159,\n        direction: -Math.PI / 2,\n        color: '#4042A8',\n        mass: 10,\n        center: false\n    },{\n        x: center.x - 480,\n        y: center.y,\n        speed: 1.567,\n        direction: -Math.PI / 2,\n        color: '#47BFBD',\n        mass: 28,\n        center: false\n    },{\n        x: center.x - 620,\n        y: center.y,\n        speed: 2,\n        direction: -Math.PI / 2,\n        color: '#AB3A2B',\n        mass: 68,\n        center: true\n    },{\n        x: center.x + 2292,\n        y: center.y,\n        speed: 1.6,\n        direction: Math.PI / 2,\n        color: '#2B7523',\n        mass: 227,\n        center: false\n    },{\n        x: center.x + 960,\n        y: center.y,\n        speed: 1.5,\n        direction: Math.PI / 2,\n        color: '#6C29A3',\n        mass: 73,\n        center: false\n    },{\n        x: center.x + 1849,\n        y: center.y,\n        speed: 1.53,\n        direction: Math.PI / 2,\n        color: '#A7A2AB',\n        mass: 183,\n        center: false\n     }\n\n   ];\n\n\n    // Setup planets\n    let planets = createPlanets(planetsSetup);\n\n    // Setup sun\n    let sun = createSun(sunSetup);\n\n    // All celestial bodies\n    planets.push(sun);\n\n    // Demo player\n    player.setUpdateFn(update);\n    player.play();\n\n\n    // Reference framework\n    let ctxX;\n    let ctxY;\n    let centerObject;\n\n    // Frame drawing function\n    function update() {\n      ctx.clearRect(0, 0, world.width, world.height);\n\n      let totalPlanets = planets.length;\n\n      // Update planets\n      for (let i=0; i<totalPlanets; i++) {\n        let p = planets[i];\n        p.update();\n\n        if (p instanceof Planet) {\n          planets[i].gravitateTo(sun);\n        }\n\n        // Adjust reference framework to the center body: planet or sun\n        if (p.center) {\n          centerObject = p;\n          ctxX = (world.center.x - p.x) * world.scale + world.trans_x;\n          ctxY = (world.center.y - p.y) * world.scale + world.trans_y;\n        }\n\n      }\n\n      ctx.save();\n      ctx.translate(ctxX, ctxY);\n\n      // Draw planets\n      for (let i=0; i<totalPlanets; i++) {\n        let p = planets[i];\n\n        if (p.center) {\n          continue;\n        }\n\n        p.draw(sun);\n      }\n\n      ctx.restore();\n\n      // Draw center body\n      centerObject.draw(sun);\n\n      world.update();\n    }\n\n\n    /** Helpers **/\n\n    function createSun(config) {\n      return new Star(config, world);\n    }\n\n    function createPlanets(config) {\n        let total = config.length;\n        let planets = [];\n\n        for (let i=0; i<total; i++) {\n          let p = new Planet(config[i], world);\n          if (config[i].debugOrbit) {\n            p.debugOrbit = true;\n          }\n          planets.push(p);\n        }\n        return planets;\n    }\n\n\n\n    /** Events **/\n\n    // Animation control: KeyDown\n    document.body.addEventListener(\"keydown\", (e) => {\n        //console.log(\"Key pressed: \", e.keyCode);\n        switch (e.keyCode) {\n            case 27:                        // Esc\n              if (player.playing) {\n                  player.stop();\n                  console.log(\"> Scene stopped\");\n              } else {\n                  player.play();\n                  console.log(\"> Playing scene\");\n              }\n              break;\n              case 13:                        // Esc\n                if (player.playing) {\n                    player.stop();\n                }\n\n                player.play();\n                player.stop();\n\n                break;\n            default:\n                break;\n        }\n    });\n\n    document.body.addEventListener(\"mousewheel\", MouseWheelHandler, false);\n\n    function MouseWheelHandler(e) {\n      let delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));\n      let scaleFactor = world.scale * 0.1;\n      if(delta > 0){\n          world.scale += scaleFactor;\n      } else {\n          world.scale -= scaleFactor;\n      }\n    }\n\n};\n","import Particle from '../../../src/lib/Particle';\n\nexport default class CelestialBody extends Particle {\n\n  constructor(settings, world) {\n    super(settings);\n\n    this.world = world;\n    this.ctx = world.ctx;\n\n    this.color = this.hexToRGB(settings.color);\n    this.radius = settings.mass * 0.2;\n    this.center = settings.center;\n\n    this.scaledX = 0;\n    this.scaledY = 0;\n    this.scaledR = 0;\n\n    this.reScale();\n  }\n\n  reScale() {\n    this.scaledX = (this.x - this.world.center.x) * this.world.scale + this.world.center.x + this.world.trans_x;\n    this.scaledY = (this.y - this.world.center.y) * this.world.scale + this.world.center.y + this.world.trans_y;\n    this.scaledR = this.radius * this.world.scale;\n  }\n\n  draw() { }\n\n  drawShadow(lightSource) {\n\n    // Shadow props\n    let radius = this.scaledR;\n    let sX, sY;\n    let shadowRadius = radius * 2.7;\n    let shadowLineWidth = radius * 0.81;\n    let shadowBlur = shadowRadius * 0.6;\n\n    // Get the angle & distance depending on the reference framework\n    let dx, dy;\n    let dist = 0;\n    if (this.center) {\n      dx = this.x - lightSource.x;\n      dy = this.y - lightSource.y;\n    } else {\n      dx = this.scaledX - lightSource.scaledX;\n      dy = this.scaledY - lightSource.scaledY;\n      dist = Math.sqrt(dx * dx + dy * dy);\n    }\n\n    // Get distance from source\n    let angle = Math.atan2(dy, dx);\n\n    // Calculate shadow-circle's coordinates\n    let x = lightSource.x + Math.cos(angle) * (dist - shadowRadius + radius * 1);\n    let y = lightSource.y + Math.sin(angle) * (dist - shadowRadius + radius * 1);\n\n\n    // Shadow setup\n    this.ctx.save();\n\n    this.ctx.shadowOffsetX = 0;\n    this.ctx.shadowOffsetY = 0;\n    this.ctx.shadowBlur = shadowBlur;\n    this.ctx.shadowColor = 'rgba(0,0,0,1)';\n\n    //clip range by planet area.\n    this.ctx.clip();\n\n    // Draw shadow\n    this.ctx.beginPath();\n    this.ctx.lineWidth = shadowLineWidth;\n    this.ctx.strokeStyle = 'rgba(0,0,0,1)';\n    this.ctx.arc(x, y, shadowRadius, 0, Math.PI*2);\n    this.ctx.stroke();\n    this.ctx.stroke();\n    this.ctx.stroke();\n    this.ctx.stroke();\n    this.ctx.stroke();\n    this.ctx.stroke();\n\n    this.ctx.restore();\n  }\n\n  createGradient() {\n    let grad = this.ctx.createRadialGradient(this.scaledX, this.scaledY, this.scaledR/4, this.scaledX, this.scaledY, this.scaledR);\n    // grad.addColorStop(0,\"#FF7\");\n    // grad.addColorStop(0.6,\"#FF4\");\n    // grad.addColorStop(0.8,\"#FF0\");\n    // grad.addColorStop(1,\"#DC0\");\n\n    let step1 = {\n      r: this.color.r + Math.floor((255 - this.color.r) * 0.26),\n      g: this.color.g + Math.floor((255 - this.color.g) * 0.26),\n      b: this.color.b + Math.floor((255 - this.color.b) * 0.26)\n    };\n\n    let step2 = {\n      r: this.color.r +  + Math.floor((255 - this.color.r) * 0.17),\n      g: this.color.g +  + Math.floor((255 - this.color.r) * 0.17),\n      b: this.color.b +  + Math.floor((255 - this.color.r) * 0.17)\n    };\n\n    let step3 = {\n      r: this.color.r,\n      g: this.color.g,\n      b: this.color.b\n    };\n\n\n    grad.addColorStop(0.2, 'rgba('+ step1.r +', '+ step1.g +', '+ step1.b +', 1)');\n    grad.addColorStop(0.8, 'rgba('+ step2.r +', '+ step2.g +', '+ step2.b +', 1)');\n    grad.addColorStop(1, 'rgba('+ step3.r +', '+ step3.g +', '+ step3.b +', 1)');\n\n    return grad;\n  }\n\n  hexToRGB(hex) {\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : null;\n  }\n};\n","import CelestialBody from './CelestialBody';\n\nexport default class Planet extends CelestialBody {\n\n  constructor(settings, world) {\n    super(settings, world);\n\n    this.grad = this.createGradient();\n  }\n\n  draw(lightSource, drawShadow) {\n    lightSource = lightSource || null;\n    drawShadow = drawShadow == false ? false:true;\n\n    this.reScale();\n\n    if (this.world.needsUpdate) {\n      this.grad = this.createGradient();\n    }\n\n    if (this.scaledR < 0) {\n      return;\n    }\n\n    let x, y;\n    switch (this.center) {\n      case false:\n        x = this.scaledX;\n        y = this.scaledY;\n        break;\n      case true:\n        x = this.world.center.x;\n        y = this.world.center.y;\n        break;\n    }\n\n    this.ctx.beginPath();\n    this.ctx.fillStyle = this.grad;\n    this.ctx.arc(x, y, this.scaledR, 0, Math.PI * 2, false);\n    this.ctx.fill();\n\n    if (lightSource && drawShadow) {\n      this.drawShadow(lightSource);\n    }\n\n\n\n    // Debug draw orbit\n    if (this.debugOrbit && !this.center) {\n\n      // Show orbit prediction\n      let predict = new Planet({\n        x: this.x,\n        y: this.y,\n        mass: this.mass,\n        direction: this.getHeading(),\n        speed: this.getSpeed(),\n        color: \"#ffffff\",\n        center: false\n      }, this.world);\n\n      for (let pr=0; pr<=2000; pr++) {\n\n        predict.update();\n        predict.gravitateTo(lightSource);\n        predict.draw(lightSource, false);\n      }\n    }\n  }\n\n};\n","import CelestialBody from './CelestialBody';\n\nexport default class Planet extends CelestialBody {\n\n  constructor(settings, world) {\n    super(settings, world);\n\n    this.grad = this.createGradient();\n  }\n\n  draw() {\n    this.reScale();\n\n    if (this.scaledR < 0) {\n      return;\n    }\n\n    if (this.world.needsUpdate) {\n      this.grad = this.createGradient();\n    }\n\n    this.ctx.fillStyle = this.grad;\n    this.ctx.beginPath();\n    this.ctx.arc(this.scaledX, this.scaledY, this.scaledR, 0, Math.PI * 2);\n    this.ctx.fill();\n  }\n\n};\n","/*\n *  Feature Toggling\n *\n *  Activete/Hide features that are in process of development or under testing\n *  Once a feature is accepted to be includded must be removed from the\n *  feature toggle scheme\n */\n\n const FEATURE_TOGGLE = {\n   FPS_CONTROL: true                // FPS controll for AnimationPlayer class\n };\n\n export default FEATURE_TOGGLE;\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class AnimationPlayer {\n\n  constructor(settings) {\n    settings = settings || {};\n\n    this.window = settings.windowElement || window;\n    this.requestId = null;\n    this.playing = false;\n\n    // FPS control\n    this.fps = settings.fps || 90;\n    this.now;\n    this.lastTime = Date.now();\n    this.interval = 1000/this.fps;\n    this.delta;\n\n    this.registerEvents();\n  }\n\n  registerEvents() {\n    // Animation control: KeyDown\n    document.body.addEventListener(\"keydown\", (e) => {\n      //console.log(\"Key pressed: \", e.keyCode);\n      switch (e.keyCode) {\n        case 27:                        // Esc\n        if (this.playing) {\n          this.stop();\n          console.log(\"> Scene stopped\");\n        } else {\n          this.play();\n          console.log(\"> Playing scene\");\n        }\n        break;\n\n        case 13:\n        this.stop();\n        this.play();\n        this.stop();\n        console.log(\"> Step forward\");\n        break;\n\n        default:\n        break;\n      }\n    });\n  }\n\n  play() {\n    this.playing = true;\n    this.updateFn();\n  }\n\n  stop() {\n    if (!this.playing) {\n      return false;\n    }\n    this.window.cancelAnimationFrame(this.requestId);\n    this.playing = false;\n    this.requestId = null;\n  }\n\n  setUpdateFn(updateFn) {\n    this.updateFn = (\n      () => {\n        this.requestId = this.window.requestAnimationFrame(this.updateFn);\n        this.now = Date.now();\n        this.delta = this.now - this.lastTime;\n\n        if (this.delta > this.interval) {\n          this.lastTime = this.now - (this.delta % this.interval);\n          updateFn(this.delta, this.lastTime);\n        }\n        return;\n\n\n        updateFn();\n\n      });\n    }\n\n    updateFn() {\n      console.warn(\"Player update function has not been set.\");\n    }\n  }\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class Particle {\n\n  /*\n   *   Pass 'boxBounce' as { w: <with>, h: <height> } to make particle bounce inside a box\n   *\n   **/\n    constructor(settings) {\n        this.x = settings.x || 0;\n        this.y = settings.y || 0;\n        this.vx = (Math.cos(settings.direction) * settings.speed) || 0;\n        this.vy = (Math.sin(settings.direction) * settings.speed) || 0;\n        this.gravity = settings.gravity || 0;\n        this.mass = settings.mass || 1;\n        this.radius = settings.radius || settings.mass * 0.87;\n        this.friction = settings.friction || 1;\n        this.springs = [];\n        this.gravitations = [];\n        this.positionUpdated = false;\n        this.color = settings.color || 'rgba(0,0,0,0.6)';\n        this.boxBounce = settings.boxBounce || false;\n    }\n\n    /*\n     *  Updates the state of the particle\n     */\n    update() {\n        let x = this.x;\n        let y = this.y;\n\n        this.handleSprings();\n        this.handleGravitations();\n        this.vy += this.gravity;\n        this.vx *= this.friction;\n        this.vy *= this.friction;\n        this.x += this.vx;\n        this.y += this.vy;\n\n        if (this.boxBounce) {\n          this.checkBorders(this.boxBounce.w, this.boxBounce.h);\n        }\n\n        if (x !== this.x && y !== this.y) {\n          this.positionUpdated = true;\n        } else {\n\n        }\n    }\n\n    /*\n     *  Gets the length of the velocity vector, which equals to the hypotenuse\n     */\n    getSpeed() {\n        return Math.sqrt(this.vx * this.vx + this.vy * this.vy);\n    }\n\n    /*\n     *  Using the actual Velocity vector's angle, sets a new length for it\n     */\n    setSpeed(speed) {\n        let heading = this.getHeading();\n        this.vx = Math.cos(heading) * speed;\n        this.vy = Math.sin(heading) * speed;\n    }\n\n    /*\n     *  Gets the angle direction of the velocity vector\n     */\n    getHeading() {\n        return Math.atan2(this.vy, this.vx);\n    }\n\n    /*\n     *  Changes the Velocity vector's angle and recalculate coordinates\n     */\n    setHeading(heading) {\n        let speed = this.getSpeed();\n        this.vx = Math.cos(heading) * speed;\n        this.vy = Math.sin(heading) * speed;\n    }\n\n    /*\n     *  Sums to the Velocity vector x and y values\n     */\n    accelerate(x, y) {\n        this.vx += x;\n        this.vy += y;\n    }\n\n    /*\n    *  Bounce if the particle hits the box (i.e. screen) borders\n    */\n    checkBorders(width, height) {\n      if (this.x + this.radius >= width) {\n        this.x = width - this.radius;\n        this.vx *=  -1;\n      } else if (this.x - this.radius <= 0) {\n        this.x = this.radius;\n        this.vx *= -1;\n      }\n\n      if (this.y + this.radius >= height) {\n        this.y = height - this.radius;\n        this.vy *=  -1;\n      } else if (this.y - this.radius <= 0) {\n        this.y = this.radius;\n        this.vy *= -1;\n      }\n    }\n\n    /*\n     *  Calculates the angle between this particle and 'p2'\n     */\n    angleTo(p2) {\n        return Math.atan2(p2.y - this.y, p2.x - this.x);\n    }\n\n    /*\n     *  Calculates the distance to a given particle\n     */\n    distanceTo(p) {\n        let dx = p.x - this.x;\n        let dy = p.y - this.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /*\n     *  Calculates and applies a gravitation vector to a given particle\n     */\n     gravitateTo(p, gravityFactor) {\n         gravityFactor = gravityFactor || 0.04;\n\n         let radiusSum = this.radius + p.radius;\n         let massFactor = this.mass * p.mass;\n\n         let dx = p.x - this.x;\n         let dy = p.y - this.y;\n         let distSQ = (dx * dx) + (dy * dy);\n         let dist = Math.sqrt(distSQ);\n         let surfaceDist = dist - radiusSum;\n\n         // Cancel gravitation once objects collide\n         // TODO: Verify if we can save the Math.sqrt() comparing squares\n         if (dist < radiusSum + 5) {\n           return;\n         }\n\n         //let force = (p.mass) / distSQ; // Force = mass / square of the distance\n         let force = gravityFactor * massFactor / (surfaceDist * surfaceDist);\n\n         let ax = (dx / surfaceDist) * force;\n         let ay = (dy / surfaceDist) * force;\n\n         this.vx += ax;\n         this.vy += ay;\n     }\n\n    /*\n     *  Registers a particle to gravitate to\n     */\n    addGravitation(p) {\n        this.removeGravitation(p);\n        this.gravitations.push(p);\n    }\n\n    /*\n     *  Unregisters a gravitation particle\n     */\n    removeGravitation(p) {\n        let length = this.gravitations.length;\n        for (let i=0; i<length; i++){\n            if (this.gravitations[i] === p) {\n                this.gravitations.slice(i, 1);\n                return true;\n            }\n        }\n    }\n\n    /*\n     *  Gravitates to each registered gravitation particle\n     */\n    handleGravitations() {\n        let length = this.gravitations.length;\n        for (let i=0; i<length; i++){\n            this.gravitateTo(this.gravitations[i]);\n        }\n    }\n\n    /*\n     *  Calculates and applies a spring vector to a given point\n     */\n    springTo(point, k, length) {\n        let dx = point.x - this.x;\n        let dy = point.y - this.y;\n        let distance = Math.sqrt(dx * dx + dy * dy);\n        let force = (distance - length || 0) * k;\n        // Instead of getting cos / sin of angle, divide sides by hypotenuse\n        this.vx += (dx / distance) * force;\n        this.vy += (dy / distance) * force;\n    }\n\n    /*\n     *  Registers a new spring point\n     */\n    addSpring(point, k, length) {\n        this.removeSpring(point);\n        this.springs.push({\n            point: point,\n            k: k,\n            length: length || 0\n        });\n    }\n\n    /*\n     *  Unregisters a spring point\n     */\n    removeSpring(point) {\n        let length = this.springs.length;\n        for (let i=0; i<length; i++){\n            if (this.springs[i].point === point) {\n                this.springs.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n\n    /*\n     *  Springs to each registered spring point\n     */\n    handleSprings() {\n        let length = this.springs.length;\n        for (let i=0; i<length; i++){\n            let spring = this.springs[i];\n            this.springTo(spring.point, spring.k, spring.length);\n        }\n    }\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}