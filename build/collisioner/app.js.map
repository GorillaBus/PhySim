{"version":3,"sources":["node_modules/browser-pack/_prelude.js","projects/collisioner/app.js","src/feature-toggle.js","src/lib/AnimationPlayer.js","src/lib/Collisioner.js","src/lib/Mapper.js","src/lib/Monitor.js","src/lib/Particle.js","src/lib/ParticleManager.js","src/lib/Utils.js"],"names":[],"mappings":"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","file":"app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\nimport AnimationPlayer from '../../src/lib/AnimationPlayer';\nimport Particle from '../../src/lib/Particle';\nimport Utils from '../../src/lib/Utils';\nimport ParticleManager from '../../src/lib/ParticleManager';\n\nwindow.onload = () => {\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const width = window.innerWidth;\n    const height = window.innerHeight-4;\n    const center = { x: width/2, y: height/2 };\n\n    canvas.height = height;\n    canvas.width = width;\n\n    let player = new AnimationPlayer({ fps: 60 });\n\n    let monOutputs = {};\n    let pmanager = new ParticleManager({\n      regionDraw: false,\n      regionSize: 10,\n      regionMon: false\n    }, ctx);\n\n    // Create particles\n    let particles = new Array(1000);\n    for (let i=0; i<particles.length; i++) {\n      particles[i] = new Particle({\n        x: Utils.randomRange(0, width),\n        y: Utils.randomRange(0, height),\n        radius: 2,\n        direction: Math.random() * Math.PI * 2,\n        speed: 2\n      });\n\n      let p = particles[i];\n      p.id = uuid();\n      p.mapperRegion = null;\n      p.color = \"#000000\";\n    }\n\n    // Inject particles into the Mapper\n    pmanager.injectParticles(particles);\n\n    // Demo player setup\n    player.setUpdateFn(update);\n    player.play();\n\n\n    // Frame drawing function\n    function update() {\n\n        // Global update\n        pmanager.update();\n\n        // Global draw\n        pmanager.draw();\n    }\n\n    function uuid() {\n      function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n      }\n      return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n        s4() + '-' + s4() + s4() + s4();\n    }\n\n    // Animation control: KeyDown\n    document.body.addEventListener(\"keydown\", (e) => {\n        //console.log(\"Key pressed: \", e.keyCode);\n        switch (e.keyCode) {\n            case 27:                        // Esc\n              if (player.playing) {\n                  player.stop();\n                  console.log(\"> Scene stopped\");\n              } else {\n                  player.play();\n                  console.log(\"> Playing scene\");\n              }\n              break;\n            case 13:\n              player.stop();\n              player.play();\n              player.stop();\n              console.log(\"> Step forward\");\n              break;\n            default:\n              break;\n        }\n    });\n\n};\n","/*\n *  Feature Toggling\n *\n *  Activete/Hide features that are in process of development or under testing\n *  Once a feature is accepted to be includded must be removed from the\n *  feature toggle scheme\n */\n\n const FEATURE_TOGGLE = {\n   FPS_CONTROL: false                // FPS controll for AnimationPlayer class\n };\n\n export default FEATURE_TOGGLE;\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class AnimationPlayer {\n\n    constructor(settings) {\n        settings = settings || {};\n\n        this.window = settings.windowElement || window;\n        this.requestId = null;\n        this.playing = false;\n\n        // FPS control\n        if (FEATURE_TOGGLE.FPS_CONTROL) {\n          this.fps = settings.fps || 90;\n          this.now;\n          this.lastTime = Date.now();\n          this.interval = 1000/this.fps;\n          this.delta;\n        }\n\n    }\n\n    play() {\n        this.playing = true;\n        this.updateFn();\n    }\n\n    stop() {\n        if (!this.playing) {\n            return false;\n        }\n        this.window.cancelAnimationFrame(this.requestId);\n        this.playing = false;\n        this.requestId = null;\n    }\n\n    setUpdateFn(updateFn) {\n        this.updateFn = (\n            () => {\n                this.requestId = this.window.requestAnimationFrame(this.updateFn);\n\n                // FPS control\n                if (FEATURE_TOGGLE.FPS_CONTROL) {\n                  this.now = Date.now();\n                  this.delta = this.now - this.lastTime;\n\n                  if (this.delta > this.interval) {\n                    this.lastTime = this.now - (this.delta % this.interval);\n                    updateFn();\n                  }\n                  return;\n                }\n\n                updateFn();\n\n            });\n    }\n\n    updateFn() {\n        console.warn(\"Player update function has not been set.\");\n    }\n}\n","export default class Collisioner {\n\n  constructor() {\n\n  }\n\n  /*\n   *  Get angle from p0's location to p1's location\n   */\n  distance(p0, p1) {\n    return p0.distanceTo(p1);\n  }\n\n  /*\n   *  Get angle from p0's location to p1's location\n   */\n  angle(p0, p1) {\n    return p0.angleTo(p1);\n  }\n\n  /*\n   *  Check for collision between two circular particles\n   */\n  circleCollision(p0, p1) {\n    let distance = this.distance(p0, p1);\n    let collides = distance <= p0.radius + p1.radius;\n\n    if (!collides) {\n      return collides;\n    }\n\n    return {\n      distance: distance,\n      angle: this.angle(p0, p1)\n    };\n  }\n\n}\n","export default class Mapper {\n\n  constructor(regionSize) {\n    this.regionSize = regionSize || 400;\n    this.regions = {};\n  }\n\n  /*\n   *  Subscribes particle 'p' to region 'rLabel'\n   */\n  subscribe(p, rLabel) {\n    let region = this.regions[rLabel];\n    if (!region.particles.hasOwnProperty(p.id)) {\n\n      // Delete particle from previous region\n      if (p.mapperRegion !== null) {\n        this.unsubscribe(p, p.mapperRegion);\n      }\n\n      region.particles[p.id] = p;\n      p.mapperRegion = rLabel;\n    }\n  }\n\n  /*\n   *  Unsubscribe particle 'p' from region 'rLabel'\n   */\n  unsubscribe(p, rLabel) {\n    delete this.regions[rLabel].particles[p.id];\n  }\n\n  /*\n   *  Update map state\n   */\n  update(rData, p) {\n    if (p.mapperRegion === rData.rLabel) {\n      return;\n    }\n\n    // Create the region if it doesn't exist already\n    if (!this.regions.hasOwnProperty(rData.rLabel)) {\n      this.createRegion(rData)\n    }\n\n    // Insert particle into the region stack if it's not already inside\n    this.subscribe(p, rData.rLabel);\n  }\n\n  /*\n   *  Get particle's region data\n   */\n  qualifyParticle(p) {\n    let pX = p.x;\n    let pY = p.y;\n\n    let rData = {\n      rX: pX > this.regionSize ? Math.floor(Math.abs(pX / this.regionSize)):0,\n      rY: pY > this.regionSize ? Math.floor(Math.abs(pY / this.regionSize)):0\n    };\n    rData.rLabel = rData.rX +\"_\"+ rData.rY\n    return rData;\n  }\n\n  /*\n   *  Create a new region\n   */\n  createRegion(rData) {\n\n    // Pre-calculate region offset\n    let rOffsetX = rData.rX * this.regionSize;\n    let rOffsetY = rData.rY * this.regionSize;\n\n    this.regions[rData.rLabel] = {\n      color: \"#000000\".replace(/0/g,function(){return (~~(Math.random()*16)).toString(16);}),\n      particles: {},\n      beginsAtX: rOffsetX,\n      beginsAtY: rOffsetY,\n      endsAtX: rOffsetX + this.regionSize,\n      endsAtY: rOffsetY + this.regionSize\n    };\n  }\n}\n","export default class Monitor {\n\n  constructor() {\n    this.HTMLObject = this.createWrapper();\n    this.outputs = {};\n  }\n\n  out(t, v) {\n    if (!this.outputs[t]) {\n      console.warn(\"Monitor > no output '\" + t +\"'\");\n      return false;\n    }\n    this.outputs[t].innerHTML = v;\n  }\n\n  newOutput(title) {\n    title = this.sanitize(title);\n    let e = this.createOutput(title);\n    let v = e.getElementsByTagName(\"SPAN\")[0];\n    this.outputs[title] = v;\n    this.HTMLObject.appendChild(e);\n    return Object.keys(this.outputs).length;\n  }\n\n  createWrapper() {\n    let e = document.createElement(\"DIV\");\n    e.setAttribute(\"id\", \"monitorWrapper\");\n    document.getElementsByTagName(\"body\")[0].appendChild(e);\n    return e;\n  }\n\n  createOutput(title) {\n    let e = document.createElement(\"DIV\");\n    e.setAttribute(\"class\", \"monitor\");\n    e.setAttribute(\"id\", title);\n\n    let head = document.createElement(\"H3\");\n    head.innerHTML = title;\n    e.appendChild(head);\n\n    let val = document.createElement(\"SPAN\");\n    val.innerHTML = \"---\";\n    e.appendChild(val);\n\n    return e;\n  }\n\n  sanitize(s) {\n   return s.replace(/\\W/g, '');\n  }\n\n}\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class Particle {\n\n    constructor(settings) {\n        this.x = settings.x || 0;\n        this.y = settings.y || 0;\n        this.vx = (Math.cos(settings.direction) * settings.speed) || 0;\n        this.vy = (Math.sin(settings.direction) * settings.speed) || 0;\n        this.gravity = settings.gravity || 0;\n        this.mass = settings.mass || 1;\n        this.radius = settings.radius || 1;\n        this.friction = settings.friction || 1;\n        this.springs = [];\n        this.gravitations = [];\n    }\n\n    /*\n     *  Updates the state of the particle\n     */\n    update() {\n        this.handleSprings();\n        this.handleGravitations();\n        this.vy += this.gravity;\n        this.vx *= this.friction;\n        this.vy *= this.friction;\n        this.x += this.vx;\n        this.y += this.vy;\n    }\n\n    /*\n     *  Gets the length of the velocity vector, which equals to the hypotenuse\n     */\n    getSpeed() {\n        return Math.sqrt(this.vx * this.vx + this.vy * this.vy);\n    }\n\n    /*\n     *  Using the actual Velocity vector's angle, sets a new length for it\n     */\n    setSpeed(speed) {\n        let heading = this.getHeading();\n        this.vx = Math.cos(heading) * speed;\n        this.vy = Math.sin(heading) * speed;\n    }\n\n    /*\n     *  Gets the angle direction of the velocity vector\n     */\n    getHeading() {\n        return Math.atan2(this.vy, this.vx);\n    }\n\n    /*\n     *  Changes the Velocity vector's angle and recalculate coordinates\n     */\n    setHeading(heading) {\n        let speed = this.getSpeed();\n        this.vx = Math.cos(heading) * speed;\n        this.vy = Math.sin(heading) * speed;\n    }\n\n    /*\n     *  Sums to the Velocity vector x and y values\n     */\n    accelerate(x, y) {\n        this.vx += x;\n        this.vy += y;\n    }\n\n    /*\n     *  Bounce if the particle hits the box (i.e. screen) borders\n     */\n     checkBorders(width, height) {\n       if (this.x < 0 || this.x > width) {\n         this.vx *= -1;\n       }\n\n       if (this.y < 0 || this.y > height) {\n         this.vy *= -1;\n       }\n     }\n\n    /*\n     *  Calculates the angle between this particle and 'p2'\n     */\n    angleTo(p2) {\n        return Math.atan2(p2.y - this.y, p2.x - this.x);\n    }\n\n    /*\n     *  Calculates the distance to a given particle\n     */\n    distanceTo(p) {\n        let dx = p.x - this.x;\n        let dy = p.y - this.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /*\n     *  Calculates and applies a gravitation vector to a given particle\n     */\n    gravitateTo(p) {\n        let dx = p.x - this.x;\n        let dy = p.y - this.y;\n        let distSQ = (dx * dx) + (dy * dy);\n        let dist = Math.sqrt(distSQ);\n        let force = (p.mass) / distSQ; // Force = mass / square of the distance\n        /*\n        cos * hypotenuse = opposite side || cos = opposite side / hypotenuse\n        sin * hypotenuse = adjacent side || sin = adjacent side / hypotenuse\n\n        That being said, we can optimize this:\n        let angle = this.angleTo(p);\n        let ax = Math.cos(angle) * force;\n        let ay = Math.sin(angle) * force;\n\n        And save three trigo functions\n        */\n        let ax = (dx / dist) * force;\n        let ay = (dy / dist) * force;\n\n        this.vx += ax;\n        this.vy += ay;\n    }\n\n    /*\n     *  Registers a particle to gravitate to\n     */\n    addGravitation(p) {\n        this.removeGravitation(p);\n        this.gravitations.push(p);\n    }\n\n    /*\n     *  Unregisters a gravitation particle\n     */\n    removeGravitation(p) {\n        let length = this.gravitations.length;\n        for (let i=0; i<length; i++){\n            if (this.gravitations[i] === p) {\n                this.gravitations.slice(i, 1);\n                return true;\n            }\n        }\n    }\n\n    /*\n     *  Gravitates to each registered gravitation particle\n     */\n    handleGravitations() {\n        let length = this.gravitations.length;\n        for (let i=0; i<length; i++){\n            this.gravitateTo(this.gravitations[i]);\n        }\n    }\n\n    /*\n     *  Calculates and applies a spring vector to a given point\n     */\n    springTo(point, k, length) {\n        let dx = point.x - this.x;\n        let dy = point.y - this.y;\n        let distance = Math.sqrt(dx * dx + dy * dy);\n        let force = (distance - length || 0) * k;\n        // Instead of getting cos / sin of angle, divide sides by hypotenuse\n        this.vx += (dx / distance) * force;\n        this.vy += (dy / distance) * force;\n    }\n\n    /*\n     *  Registers a new spring point\n     */\n    addSpring(point, k, length) {\n        this.removeSpring(point);\n        this.springs.push({\n            point: point,\n            k: k,\n            length: length || 0\n        });\n    }\n\n    /*\n     *  Unregisters a spring point\n     */\n    removeSpring(point) {\n        let length = this.springs.length;\n        for (let i=0; i<length; i++){\n            if (this.springs[i].point === point) {\n                this.springs.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n\n    /*\n     *  Springs to each registered spring point\n     */\n    handleSprings() {\n        let length = this.springs.length;\n        for (let i=0; i<length; i++){\n            let spring = this.springs[i];\n            this.springTo(spring.point, spring.k, spring.length);\n        }\n    }\n}\n","import Mapper from './Mapper';\nimport Monitor from './Monitor';\nimport Collisioner from './Collisioner';\n\nexport default class ParticleManager {\n\n  constructor(settings, ctx) {\n    settings = settings || {};\n    settings = {\n      particles: settings.particles || [],\n      boxWidth: settings.boxWidth || window.innerWidth,\n      boxHeight: settings.boxHeight || window.innerHeight-4,\n      regionDraw: settings.regionDraw || false,\n      regionSize: settings.regionSize || null,\n      regionMon: settings.regionMon || false\n    }\n\n    this.ctx = ctx;\n    this.mapper = new Mapper(settings.regionSize);\n    this.collisioner = new Collisioner();\n    this.regionMon = settings.regionMon;\n    this.regionDraw = settings.regionDraw;\n    this.monitor = settings.regionMon ? new Monitor() : null;\n    this.particles = settings.particles;\n    this.boxWidth = settings.boxWidth;\n    this.boxHeight = settings.boxHeight;\n  }\n\n\n  /*\n   *  Update loop\n   */\n  update() {\n\n    for (let i=0; i<this.particles.length; i++) {\n      let p = this.particles[i];\n\n      // Update particle position\n      p.update();\n      p.checkBorders(this.boxWidth, this.boxHeight)\n\n      // Qualify particle in the mapper and get the region data\n      let rData = this.mapper.qualifyParticle(p);\n\n      // Update region status\n      this.mapper.update(rData, p);\n    }\n  }\n\n  /*\n   *  Draw loop\n   */\n  draw() {\n\n    // Clear full screen\n    this.ctx.clearRect(0,0, this.boxWidth, this.boxHeight);\n\n    // Draw map regions (debugging)\n    if (this.regionDraw) {\n      this.drawMappgerRegions();\n    }\n\n    // Draw particles\n    for (let i=0; i<this.particles.length; i++) {\n      let p0 = this.particles[i];\n\n      // Check collisions with particles from the same region\n      this.checkCollisions(p0);\n\n      this.drawParticle(p0);\n    }\n  }\n\n  /*\n   *  Add particles to the system - if total length is > 150000 or so, check:\n   *  -- http://stackoverflow.com/questions/1374126/how-to-extend-an-existing-javascript-array-with-another-array-without-creating/17368101#17368101\n   */\n  injectParticles(particles) {\n    Array.prototype.push.apply(this.particles, particles);\n  }\n\n  /*\n   *  Check and resolve collisions within a particle's mapper region\n   */\n  checkCollisions(p0) {\n    let region = this.mapper.regions[p0.mapperRegion];\n\n    for (var r in region.particles) {\n      if (region.particles.hasOwnProperty(r)) {\n        let p1 = region.particles[r];\n\n        if (p0.id === p1.id) {\n          continue;\n        }\n\n        let result = this.collisioner.circleCollision(p0, p1);\n\n        // Reslve collision\n        if (result) {\n          p0.color = p1.color = \"red\";\n        }\n      }\n    }\n  }\n\n  /*\n   *  Draw a single particle\n   */\n  drawParticle(p) {\n    this.ctx.beginPath();\n    this.ctx.arc(p.x, p.y, p.radius, 0, Math.PI * 2, false);\n    this.ctx.fillStyle = p.color || '#000000';\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  /*\n   *  Draw Mappger Regions (for debugging)\n   */\n  drawMappgerRegions() {\n    // Draw regions\n    for (var r in this.mapper.regions) {\n      if (this.mapper.regions.hasOwnProperty(r)) {\n\n        if (this.regionMon) {\n          if (!this.monitor.outputs.hasOwnProperty(r)) {\n            this.monitor.newOutput(r);\n          }\n\n          this.monitor.out(r, Object.keys(mRegion.particles).length);\n        }\n\n        let mRegion = this.mapper.regions[r];\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = mRegion.color;\n        this.ctx.rect(mRegion.beginsAtX, mRegion.beginsAtY, this.mapper.regionSize-2, this.mapper.regionSize-2);\n        this.ctx.stroke();\n        this.ctx.closePath();\n      }\n    }\n  }\n}\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nclass Utils {\n\n  montecarlo() {\n    while(true) {\n      let r1 = Math.random();\n      let p = r1;\n      let r2 = Math.random();\n      if (r2 < p) {\n        return r1;\n      }\n    }\n  }\n\n  lerp(norm, min, max) {\n    return (max - min) * norm + min;\n  }\n\n  quadraticBezier(p0, p1, p2, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 2) * p0.x + (1 - t) * 2 * t * p1.x + t * t * p2.x;\n    pFinal.y = Math.pow(1 - t, 2) * p0.y + (1 - t) * 2 * t * p1.y + t * t * p2.y;\n    return pFinal;\n  }\n\n  cubicBezier(p0, p1, p2, p3, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 3) * p0.x + Math.pow(1 - t, 2) * 3 * t * p1.x + (1 - t) * 3 * t * t * p2.x + t * t * t * p3.x;\n    pFinal.y = Math.pow(1 - t, 3) * p0.y + Math.pow(1 - t, 2) * 3 * t * p1.y + (1 - t) * 3 * t * t * p2.y + t * t * t * p3.y;\n    return pFinal;\n  }\n\n  distance(p0, p1) {\n    let dx = p0.x - p1.x;\n    let dy = p0.y - p1.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  distanceXY(x0, y0, x1, y1) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  // TODO: Check if and why we need to parseInt() the result\n  mapRange(value, low1, high1, low2, high2) {\n    return result = low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n    let result = low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n    if (low2 === parseInt(low2, 10) || high2 === parseInt(high2, 10)) {\n      result = parseInt(result);\n    }\n    return result;\n  }\n\n  inRange(value, min, max) {\n    return value >= Math.min(min, max) && value <= Math.max(min, max);\n  }\n\n  rangeIntersect(min0, max0, min1, max1) {\n    return  Math.max(min0, max0) >= Math.min(min1, max1) &&\n    Math.min(min0, max0) <= Math.max(min1, max1);\n  }\n\n  randomRange(min, max) {\n    return min + Math.random() * (max - min);\n  }\n\n  circleCollision(c0, c1) {\n    return this.distance(c0, c1) <= c0.radius + c1.radius;\n  }\n\n  rectangleCollision(r0, r1) {\n    return  this.rangeIntersect(r0.x, r0.x + r0.width, r1.x, r1.x + r1.width) &&\n    this.rangeIntersect(r0.y, r0.y + r0.height, r1.y, r1.y + r1.height);\n  }\n\n  circlePointCollision(px, py, circle) {\n    return this.distanceXY(px, py, circle.x, circle.y) < circle.radius;\n  }\n\n  rectanglePointCollision(px, py, rect) {\n    return  this.inRange(px, rect.x, rect.x + rect.width) &&\n    this.inRange(py, rect.y, rect.y + rect.height);\n  }\n}\n\nlet instance = new Utils();\n\nexport default instance;\n"]}