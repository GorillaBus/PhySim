{"version":3,"sources":["node_modules/browser-pack/_prelude.js","projects/bezier-curves/app.js","src/feature-toggle.js","src/lib/AnimationPlayer.js","src/lib/Utils.js"],"names":[],"mappings":"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","file":"app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Utils from '../../src/lib/Utils';\nimport AnimationPlayer from '../../src/lib/AnimationPlayer';\n\nwindow.onload = () => {\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  const width = canvas.width = window.innerWidth-4;\n  const height = canvas.height = window.innerHeight-4;\n\n  let increment = 0.01;\n  let player = new AnimationPlayer();;\n\n  let t = 0;\n  let direction = true;\n  let p0 = {\n    x: 100,\n    y: height / 2\n  };\n  let p1 = {\n    x: width - 100,\n    y: height / 2\n  };\n  // Curve point for cuadratic bezier\n  let p2 = {\n    x: width - 850,\n    y: height - 150\n  };\n  // An extra point to use with cubic bezier\n  let p3 = {\n    x: width - 400,\n    y: height - 750\n  };\n  let pResult = {\n    x: 0,\n    y: 0\n  };\n\n\n  // Demo player\n  player.setUpdateFn(update);\n  player.play();\n\n\n  // Frame drawing function\n  function update() {\n    ctx.clearRect(0,0, width, height);\n\n    // Calculate a quadratic bezier\n    Utils.quadraticBezier(p0, p2, p1, t, pResult);\n\n    // Replace with this for Cubic Bezier\n    //Utils.cubicBezier(p0, p2, p3, p1, t, pResult);\n\n    t += increment;\n\n    if (t >= 1) {\n      t = 1;\n      increment *= -1;\n    } else if (t <= 0) {\n      t = 0;\n      increment *= -1;\n    }\n\n    ctx.beginPath();\n    ctx.arc(p0.x, p0.y, 10, 0, Math.PI * 2, false);\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.arc(p1.x, p1.y, 10, 0, Math.PI * 2, false);\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.arc(p2.x, p2.y, 10, 0, Math.PI * 2, false);\n    ctx.fillStyle = \"green\";\n    ctx.fill();\n    ctx.closePath();\n\n    // Uncomment to test the Cubic Bezier\n    /*\n    ctx.beginPath();\n    ctx.arc(p3.x, p3.y, 10, 0, Math.PI * 2, false);\n    ctx.fillStyle = \"yellow\";\n    ctx.fill();\n    ctx.closePath();\n    */\n\n    ctx.beginPath();\n    ctx.arc(pResult.x, pResult.y, 5, 0, Math.PI * 2, false);\n    ctx.fillStyle = \"#000000\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n\n  // Mouse click: sets the bezier curve point position\n  document.body.addEventListener(\"click\", (e) => {\n    p2.x = e.clientX;\n    p2.y = e.clientY;\n  });\n\n  // Animation control: KeyDown\n  document.body.addEventListener(\"keydown\", (e) => {\n    //console.log(\"Key pressed: \", e.keyCode);\n    switch (e.keyCode) {\n      case 27:                        // Esc\n      if (player.playing) {\n        player.stop();\n        console.log(\"> Scene stopped\");\n      } else {\n        player.play();\n        console.log(\"> Playing scene\");\n      }\n      break;\n      default:\n      break;\n    }\n  });\n};\n","/*\n *  Feature Toggling\n *\n *  Activete/Hide features that are in process of development or under testing\n *  Once a feature is accepted to be includded must be removed from the\n *  feature toggle scheme\n */\n\n const FEATURE_TOGGLE = {\n   FPS_CONTROL: true                // FPS controll for AnimationPlayer class\n };\n\n export default FEATURE_TOGGLE;\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class AnimationPlayer {\n\n    constructor(settings) {\n        settings = settings || {};\n\n        this.window = settings.windowElement || window;\n        this.requestId = null;\n        this.playing = false;\n\n        // FPS control\n        if (FEATURE_TOGGLE.FPS_CONTROL) {\n          this.fps = settings.fps || 90;\n          this.now;\n          this.lastTime = Date.now();\n          this.interval = 1000/this.fps;\n          this.delta;\n        }\n\n    }\n\n    play() {\n        this.playing = true;\n        this.updateFn();\n    }\n\n    stop() {\n        if (!this.playing) {\n            return false;\n        }\n        this.window.cancelAnimationFrame(this.requestId);\n        this.playing = false;\n        this.requestId = null;\n    }\n\n    setUpdateFn(updateFn) {\n        this.updateFn = (\n            () => {\n                this.requestId = this.window.requestAnimationFrame(this.updateFn);\n\n                // FPS control\n                if (FEATURE_TOGGLE.FPS_CONTROL) {\n                  this.now = Date.now();\n                  this.delta = this.now - this.lastTime;\n\n                  if (this.delta > this.interval) {\n                    this.lastTime = this.now - (this.delta % this.interval);\n                    updateFn();\n                  }\n                  return;\n                }\n\n                updateFn();\n\n            });\n    }\n\n    updateFn() {\n        console.warn(\"Player update function has not been set.\");\n    }\n}\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nclass Utils {\n\n  montecarlo() {\n    while(true) {\n      let r1 = Math.random();\n      let p = r1;\n      let r2 = Math.random();\n      if (r2 < p) {\n        return r1;\n      }\n    }\n  }\n\n  lerp(norm, min, max) {\n    return (max - min) * norm + min;\n  }\n\n  quadraticBezier(p0, p1, p2, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 2) * p0.x + (1 - t) * 2 * t * p1.x + t * t * p2.x;\n    pFinal.y = Math.pow(1 - t, 2) * p0.y + (1 - t) * 2 * t * p1.y + t * t * p2.y;\n    return pFinal;\n  }\n\n  cubicBezier(p0, p1, p2, p3, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 3) * p0.x + Math.pow(1 - t, 2) * 3 * t * p1.x + (1 - t) * 3 * t * t * p2.x + t * t * t * p3.x;\n    pFinal.y = Math.pow(1 - t, 3) * p0.y + Math.pow(1 - t, 2) * 3 * t * p1.y + (1 - t) * 3 * t * t * p2.y + t * t * t * p3.y;\n    return pFinal;\n  }\n\n  distance(p0, p1) {\n    let dx = p0.x - p1.x;\n    let dy = p0.y - p1.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  distanceXY(x0, y0, x1, y1) {\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  // TODO: Check if and why we need to parseInt() the result\n  mapRange(value, low1, high1, low2, high2) {\n    return result = low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n    let result = low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n    if (low2 === parseInt(low2, 10) || high2 === parseInt(high2, 10)) {\n      result = parseInt(result);\n    }\n    return result;\n  }\n\n  inRange(value, min, max) {\n    return value >= Math.min(min, max) && value <= Math.max(min, max);\n  }\n\n  rangeIntersect(min0, max0, min1, max1) {\n    return  Math.max(min0, max0) >= Math.min(min1, max1) &&\n    Math.min(min0, max0) <= Math.max(min1, max1);\n  }\n\n  randomRange(min, max) {\n    return min + Math.random() * (max - min);\n  }\n\n  circleCollision(c0, c1) {\n    return this.distance(c0, c1) <= c0.radius + c1.radius;\n  }\n\n  rectangleCollision(r0, r1) {\n    return  this.rangeIntersect(r0.x, r0.x + r0.width, r1.x, r1.x + r1.width) &&\n    this.rangeIntersect(r0.y, r0.y + r0.height, r1.y, r1.y + r1.height);\n  }\n\n  circlePointCollision(px, py, circle) {\n    return this.distanceXY(px, py, circle.x, circle.y) < circle.radius;\n  }\n\n  rectanglePointCollision(px, py, rect) {\n    return  this.inRange(px, rect.x, rect.x + rect.width) &&\n    this.inRange(py, rect.y, rect.y + rect.height);\n  }\n}\n\nlet instance = new Utils();\n\nexport default instance;\n"]}