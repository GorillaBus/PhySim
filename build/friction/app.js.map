{"version":3,"sources":["node_modules/browser-pack/_prelude.js","projects/friction/app.js","src/feature-toggle.js","src/lib/AnimationPlayer.js","src/lib/Drawer.js","src/lib/Particle.js","src/lib/Vector.js"],"names":[],"mappings":"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","file":"app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Drawer from '../../src/lib/Drawer';\nimport Particle from '../../src/lib/Particle';\nimport AnimationPlayer from '../../src/lib/AnimationPlayer';\nimport Vector from '../../src/lib/Vector';\n\nwindow.onload = () => {\n  let drawer = new Drawer();\n  let player = new AnimationPlayer();\n\n  let particleCfg = {\n    x: drawer.width / 2,\n    y: drawer.height / 2,\n    speed: 10,\n    direction: Math.random() * Math.PI * 2,\n    radius: 10,\n    friction: 0.97\n  };\n  let p = new Particle(particleCfg);\n\n  // For a real friction, use this\n  let friction = new Vector({ x:0, y:0, length: 0.15 });\n\n  // Demo player\n  player.setUpdateFn(update);\n  player.play();\n\n  // Frame drawing function\n  function update() {\n    drawer.clear();\n\n    /*\n    // Real friction method (cpu intensive)\n    if (p.velocity.getLength() > friction.getLength()) {\n      friction.setAngle(p.velocity.getAngle());\n      p.velocity.substractFrom(friction);\n    } else {\n      p.velocity.setLength(0);\n    }\n    */\n    p.update();\n\n    drawer.circle(p.x, p.y, p.radius);\n  }\n\n// Animation control: KeyDown\ndocument.body.addEventListener(\"keydown\", (e) => {\n  //console.log(\"Key pressed: \", e.keyCode);\n  switch (e.keyCode) {\n    case 38:                        // Up\n    thrusting = true;\n    break;\n    case 37:                        // Left\n    turningLeft = true;\n    break;\n    case 39:                        // Right\n    turningRight = true;\n    break;\n    case 27:                        // Esc\n    if (player.playing) {\n      player.stop();\n      console.log(\"> Scene stopped\");\n    } else {\n      player.play();\n      console.log(\"> Playing scene\");\n    }\n    break;\n    default:\n    break;\n  }\n});\n\n};\n","/*\n *  Feature Toggling\n *\n *  Activete/Hide features that are in process of development or under testing\n *  Once a feature is accepted to be includded must be removed from the\n *  feature toggle scheme\n */\n\n const FEATURE_TOGGLE = {\n   FPS_CONTROL: true                // FPS controll for AnimationPlayer class\n };\n\n export default FEATURE_TOGGLE;\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class AnimationPlayer {\n\n    constructor(settings) {\n        settings = settings || {};\n\n        this.window = settings.windowElement || window;\n        this.requestId = null;\n        this.playing = false;\n\n        // FPS control\n        if (FEATURE_TOGGLE.FPS_CONTROL) {\n          this.fps = settings.fps || 90;\n          this.now;\n          this.lastTime = Date.now();\n          this.interval = 1000/this.fps;\n          this.delta;\n        }\n\n    }\n\n    play() {\n        this.playing = true;\n        this.updateFn();\n    }\n\n    stop() {\n        if (!this.playing) {\n            return false;\n        }\n        this.window.cancelAnimationFrame(this.requestId);\n        this.playing = false;\n        this.requestId = null;\n    }\n\n    setUpdateFn(updateFn) {\n        this.updateFn = (\n            () => {\n                this.requestId = this.window.requestAnimationFrame(this.updateFn);\n\n                // FPS control\n                if (FEATURE_TOGGLE.FPS_CONTROL) {\n                  this.now = Date.now();\n                  this.delta = this.now - this.lastTime;\n\n                  if (this.delta > this.interval) {\n                    this.lastTime = this.now - (this.delta % this.interval);\n                    updateFn();\n                  }\n                  return;\n                }\n\n                updateFn();\n\n            });\n    }\n\n    updateFn() {\n        console.warn(\"Player update function has not been set.\");\n    }\n}\n","export default class Drawer {\n\n  constructor(canvas) {\n    this.canvas = canvas || null;\n    this.ctx = null;\n    this.width = null;\n    this.height = null;\n    this.center = { x: null, y: null };\n\n    this.setup(canvas);\n  }\n\n  setup(canvas) {\n    this.canvas = canvas ? canvas : document.createElement(\"canvas\");\n    this.canvas.setAttribute(\"id\", \"canvas\");\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.width = this.canvas.width = window.innerWidth-4;\n    this.height = this.canvas.height = window.innerHeight-4;\n    this.center = { x: this.width/2, y: this.height/2 };\n\n    if (!canvas) {\n      this.insertCanvas(this.canvas);\n    }\n  }\n\n  insertCanvas(canvas) {\n    document.getElementsByTagName(\"BODY\")[0].appendChild(canvas);\n  }\n\n  clear(x, y, width, height) {\n    x = x || 0;\n    y = y || 0;\n    width = width || this.width;\n    height = height || this.height;\n\n    this.ctx.clearRect(x, y, width, height);\n  }\n\n  circle(x, y, radio) {\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, radio, 0, 2*Math.PI, false);\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n}\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class Particle {\n\n  /*\n   *   Pass 'boxBounce' as { w: <with>, h: <height> } to make particle bounce inside a box\n   *\n   **/\n    constructor(settings) {\n        this.x = settings.x || 0;\n        this.y = settings.y || 0;\n        this.vx = (Math.cos(settings.direction) * settings.speed) || 0;\n        this.vy = (Math.sin(settings.direction) * settings.speed) || 0;\n        this.gravity = settings.gravity || 0;\n        this.mass = settings.mass || 1;\n        this.radius = settings.radius || settings.mass * 0.87;\n        this.friction = settings.friction || 1;\n        this.springs = [];\n        this.gravitations = [];\n\n        this.color = settings.color || \"#000000\";\n        this.boxBounce = settings.boxBounce || false;\n    }\n\n    /*\n     *  Updates the state of the particle\n     */\n    update() {\n        this.handleSprings();\n        this.handleGravitations();\n        this.vy += this.gravity;\n        this.vx *= this.friction;\n        this.vy *= this.friction;\n        this.x += this.vx;\n        this.y += this.vy;\n\n        if (this.boxBounce) {\n          this.checkBorders(this.boxBounce.w, this.boxBounce.h);\n        }\n    }\n\n    /*\n     *  Gets the length of the velocity vector, which equals to the hypotenuse\n     */\n    getSpeed() {\n        return Math.sqrt(this.vx * this.vx + this.vy * this.vy);\n    }\n\n    /*\n     *  Using the actual Velocity vector's angle, sets a new length for it\n     */\n    setSpeed(speed) {\n        let heading = this.getHeading();\n        this.vx = Math.cos(heading) * speed;\n        this.vy = Math.sin(heading) * speed;\n    }\n\n    /*\n     *  Gets the angle direction of the velocity vector\n     */\n    getHeading() {\n        return Math.atan2(this.vy, this.vx);\n    }\n\n    /*\n     *  Changes the Velocity vector's angle and recalculate coordinates\n     */\n    setHeading(heading) {\n        let speed = this.getSpeed();\n        this.vx = Math.cos(heading) * speed;\n        this.vy = Math.sin(heading) * speed;\n    }\n\n    /*\n     *  Sums to the Velocity vector x and y values\n     */\n    accelerate(x, y) {\n        this.vx += x;\n        this.vy += y;\n    }\n\n    /*\n    *  Bounce if the particle hits the box (i.e. screen) borders\n    */\n    checkBorders(width, height) {\n      if (this.x + this.radius >= width) {\n        this.x = width - this.radius;\n        this.vx *=  -1;\n      } else if (this.x - this.radius <= 0) {\n        this.x = this.radius;\n        this.vx *= -1;\n      }\n\n      if (this.y + this.radius >= height) {\n        this.y = height - this.radius;\n        this.vy *=  -1;\n      } else if (this.y - this.radius <= 0) {\n        this.y = this.radius;\n        this.vy *= -1;\n      }\n    }\n\n    /*\n     *  Calculates the angle between this particle and 'p2'\n     */\n    angleTo(p2) {\n        return Math.atan2(p2.y - this.y, p2.x - this.x);\n    }\n\n    /*\n     *  Calculates the distance to a given particle\n     */\n    distanceTo(p) {\n        let dx = p.x - this.x;\n        let dy = p.y - this.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /*\n     *  Calculates and applies a gravitation vector to a given particle\n     */\n     gravitateTo(p, gravityFactor) {\n         gravityFactor = gravityFactor || 0.04;\n\n         let radiusSum = this.radius + p.radius;\n         let massFactor = this.mass * p.mass;\n\n         let dx = p.x - this.x;\n         let dy = p.y - this.y;\n         let distSQ = (dx * dx) + (dy * dy);\n         let dist = Math.sqrt(distSQ);\n         let surfaceDist = dist - radiusSum;\n\n         // Cancel gravitation once objects collide\n         // TODO: Verify if we can save the Math.sqrt() comparing squares\n         if (dist < radiusSum + 5) {\n           return;\n         }\n\n         //let force = (p.mass) / distSQ; // Force = mass / square of the distance\n         let force = gravityFactor * massFactor / (surfaceDist * surfaceDist);\n\n         let ax = (dx / surfaceDist) * force;\n         let ay = (dy / surfaceDist) * force;\n\n         this.vx += ax;\n         this.vy += ay;\n     }\n\n    /*\n     *  Registers a particle to gravitate to\n     */\n    addGravitation(p) {\n        this.removeGravitation(p);\n        this.gravitations.push(p);\n    }\n\n    /*\n     *  Unregisters a gravitation particle\n     */\n    removeGravitation(p) {\n        let length = this.gravitations.length;\n        for (let i=0; i<length; i++){\n            if (this.gravitations[i] === p) {\n                this.gravitations.slice(i, 1);\n                return true;\n            }\n        }\n    }\n\n    /*\n     *  Gravitates to each registered gravitation particle\n     */\n    handleGravitations() {\n        let length = this.gravitations.length;\n        for (let i=0; i<length; i++){\n            this.gravitateTo(this.gravitations[i]);\n        }\n    }\n\n    /*\n     *  Calculates and applies a spring vector to a given point\n     */\n    springTo(point, k, length) {\n        let dx = point.x - this.x;\n        let dy = point.y - this.y;\n        let distance = Math.sqrt(dx * dx + dy * dy);\n        let force = (distance - length || 0) * k;\n        // Instead of getting cos / sin of angle, divide sides by hypotenuse\n        this.vx += (dx / distance) * force;\n        this.vy += (dy / distance) * force;\n    }\n\n    /*\n     *  Registers a new spring point\n     */\n    addSpring(point, k, length) {\n        this.removeSpring(point);\n        this.springs.push({\n            point: point,\n            k: k,\n            length: length || 0\n        });\n    }\n\n    /*\n     *  Unregisters a spring point\n     */\n    removeSpring(point) {\n        let length = this.springs.length;\n        for (let i=0; i<length; i++){\n            if (this.springs[i].point === point) {\n                this.springs.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n\n    /*\n     *  Springs to each registered spring point\n     */\n    handleSprings() {\n        let length = this.springs.length;\n        for (let i=0; i<length; i++){\n            let spring = this.springs[i];\n            this.springTo(spring.point, spring.k, spring.length);\n        }\n    }\n}\n","import FEATURE_TOGGLE from '../../src/feature-toggle';\n\nexport default class Vector {\n\n  constructor(settings) {\n    settings = settings || {};\n    settings.x = settings.x || 0;\n    settings.y = settings.y || 0;\n    settings.length = settings.length || 0;\n    settings.angle = settings.angle || 0;\n\n    this._x = settings.x;\n    this._y = settings.y;\n\n    if (settings.length) {\n      this.setLength(settings.length);\n    }\n    if (settings.angle) {\n      this.setAngle(settings.angle);\n    }\n  }\n\n  setX(value) {\n    this._x = value;\n  }\n\n  getX(value) {\n    return this._x;\n  }\n\n  setY(value) {\n    this._y = value;\n  }\n\n  getY(value) {\n    return this._y;\n  }\n\n  setAngle(angle) {\n    let length = this.getLength();\n    this._x = Math.cos(angle) * length;\n    this._y = Math.sin(angle) * length;\n  }\n\n  getAngle() {\n    return Math.atan2(this._y, this._x);\n  }\n\n  setLength(length) {\n    let angle = this.getAngle();\n    this._x = Math.cos(angle) * length;\n    this._y = Math.sin(angle) * length;\n  }\n\n  getLength() {\n    return Math.sqrt(this._x * this._x + this._y * this._y);\n  }\n\n  add(vector) {\n    return new Vector({ x: this._x + vector.getX(), y: this._y + vector.getY() });\n  }\n\n  substract(vector) {\n    return new Vector({ x: this._x - vector.getX(), y: this._y - vector.getY() });\n  }\n\n  multiply(value) {\n    return new Vector({ x: this._x * value, y: this._y * value });\n  }\n\n  divide(value) {\n    return new Vector({ x: this._x / value, y: this._y / value });\n  }\n\n  addTo(vector) {\n    this._x += vector.getX();\n    this._y += vector.getY();\n  }\n\n  substractFrom(vector) {\n    this._x -= vector.getX();\n    this._y -= vector.getY();\n  }\n\n  multiplyBy(value) {\n    this._x *= value;\n    this._y *= value;\n  }\n\n  divideBy(value) {\n    this._x /= value;\n    this._y /= value;\n  }\n\n  copy() {\n    return new Vector({\n      x: this.getX(),\n      y: this.getY()\n    });\n  }\n\n  normalize() {\n    var length = this.getLength();\n    if (length != 0) {\n      this.divideBy(length);\n    }\n  }\n};\n"]}